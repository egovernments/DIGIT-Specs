openapi: 3.0.0
info:
  version: 1.0.0
  title: DIGIT Public Grievance Redressal(PGR) V2
  description: |
    ### API specs for PGR ###
    Application to Raise Grivances and track the progress.
    . It allows any citizen registered in the system to raise a complaint (based on the   Service definition provided in the master data, Please Refer MDMS service to        Service Definition master) for any ulb belonging to the state.
    . Notifications will be provided on progress of the complaint in evevry step.
    . Feedback can be provided by the citizen once the complint is resolved.
    . If not satisfied the citizen can reopen the complaint.
  contact:
    name: Egovernments Foundation
    email: contact@egovernments.org
x-module: BPA
x-common-path: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas'
paths:
  /migration/_transform:
    post:
      tags:
        - migration-controller
      summary: requestsCreatePost
      operationId: requestsCreatePostUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResponseV1'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v2/request/_count:
    post:
      tags:
        - requests-api-controller
      summary: requestsCountPost
      operationId: requestsCountPostUsingPOST
      parameters:
        - name: accountId
          in: query
          description: "Initiator User UUID" 
          required: false
          style: form
          schema:
            type: string
        - name: applicationStatus
          in: query
          description: Search by list of Application Status
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: Transaction date, here search will happen as Transaction date is greater or equal to given fromDate
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: ids
          in: query
          description: "List of system generated ids of applications."
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: isPlainSearch
          in: query
          description: 'true if Plain search is enabled, otherwise false'
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          description: limit 
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: locality
          in: query
          description: name of locality
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: mobileNumber
          in: query
          description: "MobileNumber of citizen"
          required: false
          style: form
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: serviceCode
          in: query
          description: Allows search for service type - comma separated list
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: serviceRequestId
          in: query
          description: Search by serviceRequestId of the complaint
          required: false
          style: form
          schema:
            type: string
        - name: slaDeltaMaxLimit
          in: query
          description: Maximum SLA Delta Limit
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: slaDeltaMinLimit
          in: query
          description: Minimum SLA Delta Limit
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: sortBy
          in: query
          description: parameter for sorting
          required: false
          style: form
          schema:
            type: string
            enum:
              - applicationStatus
              - locality
              - serviceRequestId
        - name: sortOrder
          in: query
          description: order of sorting
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: tenantId
          in: query
          description: "Unique id for a tenant."
          required: false
          style: form
          schema:
            type: string
        - name: tenantIds
          in: query
          description: "List of tenant ids of applications."
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: toDate
          in: query
          description: Transaction date, here search will happen as Transaction date is lesser or equal to given toDate.
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: userIds
          in: query
          description: "UserId of the user calling"
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CountResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v2/request/_create:
    post:
      tags:
        - requests-api-controller
      summary: requestsCreatePost
      operationId: requestsCreatePostUsingPOST_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '201':
          description: Created
        400:
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  /v2/request/_plainsearch:
    post:
      tags:
        - requests-api-controller
      summary: requestsPlainSearchPost
      operationId: requestsPlainSearchPostUsingPOST
      parameters:
        - name: accountId
          in: query
          description: "Initiator User UUID" 
          required: false
          style: form
          schema:
            type: string
        - name: applicationStatus
          in: query
          description: Search by list of Application Status
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: Transaction date, here search will happen as Transaction date is greater or equal to given fromDate
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: ids
          in: query
          description: "List of system generated ids of applications."
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: isPlainSearch
          in: query
          description: 'true if Plain search is enabled, otherwise false'
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          description: limit 
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: locality
          in: query
          description: name of locality
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: mobileNumber
          in: query
          description: "MobileNumber of citizen"
          required: false
          style: form
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: serviceCode
          in: query
          description: Allows search for service type - comma separated list
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: serviceRequestId
          in: query
          description: Search by serviceRequestId of the complaint
          required: false
          style: form
          schema:
            type: string
        - name: slaDeltaMaxLimit
          in: query
          description: Maximum SLA Delta Limit
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: slaDeltaMinLimit
          in: query
          description: Minimum SLA Delta Limit
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: sortBy
          in: query
          description: parameter for sorting
          required: false
          style: form
          schema:
            type: string
            enum:
              - applicationStatus
              - locality
              - serviceRequestId
        - name: sortOrder
          in: query
          description: order of sorting
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: tenantId
          in: query
          description: "Unique id for a tenant."
          required: false
          style: form
          schema:
            type: string
        - name: tenantIds
          in: query
          description: "List of tenant ids of applications."
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: toDate
          in: query
          description: Transaction date, here search will happen as Transaction date is lesser or equal to given toDate.
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: userIds
          in: query
          description: "UserId of the user calling"
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  /v2/request/_search:
    post:
      tags:
        - requests-api-controller
      summary: requestsSearchPost
      operationId: requestsSearchPostUsingPOST_1
      parameters:
        - name: accountId
          in: query
          description: "Initiator User UUID" 
          required: false
          style: form
          schema:
            type: string
        - name: applicationStatus
          in: query
          description: Search by list of Application Status
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: Transaction date, here search will happen as Transaction date is greater or equal to given fromDate
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: ids
          in: query
          description: "List of system generated ids of applications."
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: isPlainSearch
          in: query
          description: 'true if Plain search is enabled, otherwise false'
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          description: limit 
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: locality
          in: query
          description: name of locality
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: mobileNumber
          in: query
          description: "MobileNumber of citizen"
          required: false
          style: form
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: serviceCode
          in: query
          description: Allows search for service type - comma separated list
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: serviceRequestId
          in: query
          description: Search by serviceRequestId of the complaint
          required: false
          style: form
          schema:
            type: string
        - name: slaDeltaMaxLimit
          in: query
          description: Maximum SLA Delta Limit
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: slaDeltaMinLimit
          in: query
          description: Minimum SLA Delta Limit
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: sortBy
          in: query
          description: parameter for sorting
          required: false
          style: form
          schema:
            type: string
            enum:
              - applicationStatus
              - locality
              - serviceRequestId
        - name: sortOrder
          in: query
          description: order of sorting
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: tenantId
          in: query
          description: "Unique id for a tenant."
          required: false
          style: form
          schema:
            type: string
        - name: tenantIds
          in: query
          description: "List of tenant ids of applications."
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: toDate
          in: query
          description: Transaction date, here search will happen as Transaction date is lesser or equal to given toDate.
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: userIds
          in: query
          description: "UserId of the user calling"
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  /v2/request/_update:
    post:
      tags:
        - requests-api-controller
      summary: requestsUpdatePost
      operationId: requestsUpdatePostUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
components:
  schemas:
    ActionHistory:
      title: ActionHistory
      type: object
      properties:
        actions:
            $ref: "#/components/schemas/ActionInfo"
    ActionInfo:
      title: ActionInfo
      type: object
      properties:
        action:
          type: string
        assignee:
          type: string
        businessKey:
          maxLength: 64
          minLength: 2
          type: string
        by:
          type: string
        comments:
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9!@#.,/:; ()&']*$
          type: string
        isInternal:
          type: boolean
        media:
          type: array
          items:
            type: string
        status:
          type: string
        tenantId:
          maxLength: 50
          minLength: 2
          pattern: ^[a-zA-Z.]*$
          type: string
        uuid:
          type: string
        when:
          type: integer
          format: int64
    Boundary:
      title: Boundary
      required:
        - code
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/Boundary'
        code:
          type: string
        label:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        materializedPath:
          type: string
        name:
          type: string
    CountResponse:
      title: CountResponse
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        count:
          type: integer
          format: int32
    Document:
      title: Document
      type: object
      properties:
        additionalDetails:
          type: object
        documentType:
          type: string
        documentUid:
          type: string
        fileStoreId:
          type: string
        id:
          type: string
      description: This object holds list of documents attached during the transaciton for a property
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
    
    ServiceReq:
      title: ServiceReq
      required:
        - address
        - serviceCode
        - source
        - tenantId
      type: object
      properties:
        accountId:
          type: string
        active:
          type: boolean
        additionalDetail:
          type: object
        address:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/Address'
        applicationStatus:
          type: string
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
        citizen:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
        description:
          type: string
        id:
          type: string
        rating:
          type: integer
          format: int32
        serviceCode:
          type: string
        serviceRequestId:
          type: string
        source:
          type: string
        tenantId:
          type: string
      description: 'Instance of Service request raised for a particular service. As per extension propsed in the Service definition "attributes" carry the input values requried by metadata definition in the structure as described by the corresponding schema.  * Any one of ''address'' or ''(lat and lang)'' or ''addressid'' is mandatory '
    ServiceRequest:
      title: ServiceRequest
      required:
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        service:
          $ref: '#/components/schemas/ServiceReq'
        workflow:
          $ref: '#/components/schemas/Workflow'
      description: Request object to fetch the report data
    ServiceRes:
      title: Service
      required:
        - address
        - serviceCode
        - source
        - tenantId
      type: object
      properties:
        accountId:
          type: string
        active:
          type: boolean
        additionalDetail:
          type: object
        address:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/Address'
        applicationStatus:
          type: string
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
        citizen:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
        description:
          type: string
        id:
          type: string
        rating:
          type: integer
          format: int32
        serviceCode:
          type: string
        serviceRequestId:
          type: string
        source:
          type: string
        tenantId:
          type: string
      description: 'Instance of Service request raised for a particular service. As per extension propsed in the Service definition "attributes" carry the input values requried by metadata definition in the structure as described by the corresponding schema.  * Any one of ''address'' or ''(lat and lang)'' or ''addressid'' is mandatory '
    ServiceResponseV1:
      title: ServiceResponseV1
      type: object
      properties:
        actionHistory:
          type: array
          items:
            $ref: "#/components/schemas/ActionHistory"
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceRes"
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
      description: Response to the service request
    ServiceResponse:
      title: ServiceResponse
      type: object
      properties:
        ServiceWrappers:
          type: array
          items:
            $ref: '#/components/schemas/ServiceWrapper'
        averageResolutionTime:
          type: integer
          format: int32
        complaintTypes:
          type: integer
          format: int32
        complaintsResolved:
          type: integer
          format: int32
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
      description: Response to the service request
    ServiceWrapper:
      title: ServiceWrapper
      type: object
      properties:
        service:
          $ref: '#/components/schemas/ServiceRes'
        workflow:
          $ref: '#/components/schemas/Workflow'
    Workflow:
      title: Workflow
      type: object
      properties:
        action:
          type: string
        assignes:
          type: array
          items:
            type: string
        comments:
          type: string
        verificationDocuments:
          type: array
          items:
            $ref: '#/components/schemas/Document'
      description: BPA application object to capture the details of land, land owners, and address of the land.
