openapi: 3.0.1
info:
  title: Census Service
  description: APIs to create, search and update census records.
  version: 1.0.0
servers:
- url: /census
paths:
  /_create:
    post:
      tags:
      - Census
      summary: API endpoint to create census record.
      description: |
        Provides functionality to create census record.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CensusRequest"
      responses:
        202:
          description: Accepted.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CensusResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
  /_search:
    post:
      tags:
      - Census
      summary: API endpoint to search census record.
      description: |
        Provides functionality to search census record.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CensusSearchRequest"
      responses:
        200:
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CensusResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
  /_update:
    post:
      tags:
      - Census
      summary: API endpoint to update census record.
      description: |
        Provides functionality to update census record.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CensusRequest"
      responses:
        202:
          description: Accepted.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CensusResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
components:
  schemas:
    CensusRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        Census:
          $ref: '#/components/schemas/Census'
    CensusResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        Census:
          type: array
          items:
            $ref: '#/components/schemas/Census'
    CensusSearchCriteria:
      type: object
      properties:
        tenantId:
          maxLength: 100
          minLength: 1
          type: string
          description: Unique id for a tenant.
        areaCodes:
          type: array
          items:
            type: string
            example: ["in.ka.blr", "in.ka.hssn"]
          description: Area codes for census records
    CensusSearchRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        CensusSearchCriteria:
          $ref: '#/components/schemas/CensusSearchCriteria'
    Census:
      type: object
      required:
        - tenantId
        - hierarchyType
        - boundaryCode
        - type
        - totalPopulation
        - source
      properties:
        tenantId:
          type: string
          example: "IN"
        hierarchyType:
          type: string
          example: "ADMIN"
        boundaryCode:
          type: string
          example: "in.ka.blr"
        type:
          type: string
          enum: [people, animals, plants, other]
          example: people
        totalPopulation:
          type: integer
          format: int64
          example: 50000
        populationByDemographics:
          type: array
          items:
            $ref: '#/components/schemas/PopulationByDemographic'
        effectiveFrom:
          type: integer
          description: epoch of the time the census record is effective from
          format: int64
          example: 1724303913
        effectiveTo:
          type: integer
          description: epoch of the time the census record is effective to
          format: int64
          example: 1724307219
        source:
          type: string
          example: "Census 2024"
        additionalDetails:
          type: object
    PopulationByDemographic:
      type: object
      properties:
        demographicVariable:
          type: string
          enum: [age, gender, ethnicity]
          example: age
        populationDistribution:
          type: object
          example: '{"0-14": 10000, "15-24": 8000, "25-64": 25000, "65+": 7000}'
