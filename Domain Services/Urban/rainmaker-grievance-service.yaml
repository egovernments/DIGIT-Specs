openapi: 3.0.1
info:
  title: Public Grievance Redressal
  description: "\n### API specs for PGR ###\nApplication to Raise Grivances and track\
    \ the progress.\n. It allows any citizen registered in the system to raise a complaint\
    \ (based on the   Service definition provided in the master data, Please Refer\
    \ MDMS service to        Service Definition master) for any ulb belonging to the\
    \ state.\n. Notifications will be provided on progress of the complaint in evevry\
    \ step. \n. Feedback can be provided by the citizen once the complint is resolved.\n\
    . If not satisfied the citizen can reopen the complaint.\n"
  contact:
    name: info
  version: 1.0.0
servers:
- url: https://egov-micro-dev.egovernments.org/rainmaker-pgr/v2
paths:
  /v2/_migrate:
    post:
      tags:
        - migration-controller
      summary: search
      operationId: searchUsingPOST
      parameters:
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: serviceRequestIds
          in: query
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tenantIds
          in: query
          required: false
          style: pipeDelimited
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reports/_get:
    post:
      tags:
        - report-controller
      summary: getReports
      operationId: getReportsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/requests/_count:
    post:
      tags:
        - service-controller
      summary: count
      operationId: countUsingPOST
      parameters:
        - name: accountId
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z0-9]$
            type: string
        - name: active
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: assignedTo
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z0-9]$
            type: string
        - name: createdBy
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: endDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: group
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z.]$
            type: string
        - name: lastUpdatedSince
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: noOfRecords
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: phone
          in: query
          required: false
          style: form
          schema:
            pattern: (^$|[0-9]{10})
            type: string
        - name: serviceCodes
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: serviceRequestId
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: startDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: tenantId
          in: query
          required: true
          style: form
          schema:
            maximum: 25
            minimum: 2
            maxLength: 25
            minLength: 2
            pattern: ^[a-zA-Z.]*$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/requests/_create:
    post:
      tags:
        - service-controller
      summary: create
      operationId: createUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/requests/_plainsearch:
    post:
      tags:
        - service-controller
      summary: plainsearch
      operationId: plainsearchUsingPOST
      parameters:
        - name: accountId
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z0-9]$
            type: string
        - name: active
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: assignedTo
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z0-9]$
            type: string
        - name: createdBy
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: endDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: group
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z.]$
            type: string
        - name: lastUpdatedSince
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: noOfRecords
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: phone
          in: query
          required: false
          style: form
          schema:
            pattern: (^$|[0-9]{10})
            type: string
        - name: serviceCodes
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: serviceRequestId
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: startDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: tenantId
          in: query
          required: true
          style: form
          schema:
            maximum: 25
            minimum: 2
            maxLength: 25
            minLength: 2
            pattern: ^[a-zA-Z.]*$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/requests/_search:
    post:
      tags:
        - service-controller
      summary: search
      operationId: searchUsingPOST_1
      parameters:
        - name: accountId
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z0-9]$
            type: string
        - name: active
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: assignedTo
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z0-9]$
            type: string
        - name: createdBy
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: endDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: group
          in: query
          required: false
          style: form
          schema:
            pattern: ^[a-zA-Z.]$
            type: string
        - name: lastUpdatedSince
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: noOfRecords
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: phone
          in: query
          required: false
          style: form
          schema:
            pattern: (^$|[0-9]{10})
            type: string
        - name: serviceCodes
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: serviceRequestId
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: startDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: tenantId
          in: query
          required: true
          style: form
          schema:
            maximum: 25
            minimum: 2
            maxLength: 25
            minLength: 2
            pattern: ^[a-zA-Z.]*$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/requests/_update:
    post:
      tags:
        - service-controller
      summary: update
      operationId: updateUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    ActionInfo:
      title: ActionInfo
      type: object
      properties:
        action:
          type: string
        assignee:
          type: string
        businessKey:
          maxLength: 64
          minLength: 2
          type: string
        by:
          type: string
        comments:
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9!@#.,/:; ()&']*$
          type: string
        isInternal:
          type: boolean
        media:
          type: array
          items:
            type: string
        status:
          type: string
        tenantId:
          maxLength: 50
          minLength: 2
          pattern: ^[a-zA-Z.]*$
          type: string
        uuid:
          type: string
        when:
          type: integer
          format: int64
    Address:
      title: Address
      required:
        - city
        - mohalla
      type: object
      properties:
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        city:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9._]*$
          type: string
        houseNoAndStreetName:
          maxLength: 160
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&'']*$'
          type: string
        landmark:
          maxLength: 160
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&''-]*$'
          type: string
        latitude:
          type: number
          format: double
        locality:
          maxLength: 100
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&''-]*$'
          type: string
        longitude:
          type: number
          format: double
        mohalla:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9._-]*$
          type: string
        tenantId:
          maxLength: 25
          minLength: 2
          pattern: ^[a-zA-Z.]*$
          type: string
        uuid:
          type: string      
    AuditDetails:
      title: AuditDetails
      type: object
      properties:
        createdBy:
          type: string
        createdTime:
          type: integer
          format: int64
        lastModifiedBy:
          type: string
        lastModifiedTime:
          type: integer
          format: int64
    Citizen:
      title: Citizen
      type: object
      properties:
        aadhaarNumber:
          type: string
        active:
          type: boolean
        emailId:
          type: string
        gender:
          type: string
          enum:
            - FEMALE
            - MALE
            - OTHERS
        id:
          type: integer
          format: int64
        mobileNumber:
          pattern: (^$|[0-9]{10})
          type: string
        name:
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z. ]*$
          type: string
        pan:
          type: string
        password:
          type: string
        permanentAddress:
          maxLength: 160
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&''-]*$'
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role0'
        tenantId:
          type: string
        type:
          type: string
          enum:
            - BUSINESS
            - CITIZEN
            - EMPLOYEE
            - SYSTEM
        userName:
          type: string
        uuid:
          type: string      
    ParamValue:
      title: ParamValue
      type: object
      properties:
        input:
          type: object
        name:
          type: string      
    PlainAccessRequest:
      title: PlainAccessRequest
      type: object
      properties:
        plainRequestFields:
          type: array
          items:
            type: string
        recordId:
          type: string      
    ReportRequest:
      title: ReportRequest
      required:
        - RequestInfo
        - reportName
        - tenantId
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        reportName:
          type: string
        searchParams:
          type: array
          items:
            $ref: '#/components/schemas/ParamValue'
        tenantId:
          type: string      
    RequestInfo:
      title: RequestInfo
      type: object
      properties:
        action:
          type: string
        apiId:
          type: string
        authToken:
          type: string
        correlationId:
          type: string
        did:
          type: string
        key:
          type: string
        msgId:
          type: string
        plainAccessRequest:
          $ref: '#/components/schemas/PlainAccessRequest'
        ts:
          type: integer
          format: int64
        userInfo:
          $ref: '#/components/schemas/User'
        ver:
          type: string      
    Role:
      title: Role
      type: object
      properties:
        code:
          maxLength: 50
          minLength: 0
          type: string
        id:
          type: integer
          format: int64
        name:
          maxLength: 128
          minLength: 0
          type: string
        tenantId:
          maxLength: 256
          minLength: 0
          type: string
    Role0:
      title: Role0
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        tenantId:
          type: string      
    Service:
      title: Service
      required:
        - addressDetail
        - phone
        - serviceCode
        - tenantId
      type: object
      properties:
        accountId:
          type: string
        active:
          type: boolean
        address:
          maxLength: 160
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&'']*$'
          type: string
        addressDetail:
          $ref: '#/components/schemas/Address'
        addressId:
          type: string
        attributes:
          type: object
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        citizen:
          $ref: '#/components/schemas/Citizen'
        description:
          maxLength: 256
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&'']*$'
          type: string
        deviceId:
          maxLength: 160
          minLength: 0
          pattern: '^[a-zA-Z0-9!@#.,/: ()&'']*$'
          type: string
        email:
          type: string
        expectedTime:
          type: integer
          format: int64
        feedback:
          pattern: '^[a-zA-Z0-9!@#.,/: ()&'']*$'
          type: string
        firstName:
          pattern: (^[a-zA-Z. ]$)
          type: string
        landmark:
          pattern: '^[a-zA-Z0-9!@#.,/: ()&'']*$'
          type: string
        lastName:
          pattern: (^[a-zA-Z. ]$)
          type: string
        lat:
          type: number
          format: double
        long:
          type: number
          format: double
        phone:
          maxLength: 2147483647
          minLength: 1
          pattern: (^$|[0-9]{10})
          type: string
        rating:
          type: string
        serviceCode:
          maxLength: 50
          minLength: 2
          pattern: ^[a-zA-Z0-9._]*$
          type: string
        serviceRequestId:
          type: string
        source:
          type: string
          enum:
            - RB Bot
            - csc
            - email
            - ivr
            - mobileapp
            - sms
            - web
            - whatsapp
        status:
          type: string
          enum:
            - assigned
            - cancelled
            - closed
            - open
            - reassignrequested
            - rejected
            - resolved
        tenantId:
          maxLength: 25
          minLength: 2
          pattern: ^[a-zA-Z.]*$
          type: string      
    ServiceRequest:
      title: ServiceRequest
      required:
        - services
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        actionInfo:
          type: array
          items:
            $ref: '#/components/schemas/ActionInfo'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'      
    User:
      title: User
      type: object
      properties:
        emailId:
          maxLength: 300
          minLength: 0
          type: string
        id:
          type: integer
          format: int64
        mobileNumber:
          maxLength: 150
          minLength: 0
          type: string
        name:
          maxLength: 250
          minLength: 0
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        tenantId:
          maxLength: 256
          minLength: 0
          type: string
        type:
          maxLength: 50
          minLength: 0
          type: string
        userName:
          maxLength: 180
          minLength: 0
          type: string
        uuid:
          maxLength: 36
          minLength: 0
          type: string        
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'      
    