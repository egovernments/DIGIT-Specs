openapi: 3.0.1
info:
  title: Property Tax Calculation APIs
  description: |
    APIs available for Property
      - Calculate Property Tax.
  contact:
    name: eGovernments Foundation
    email: ghanshyam.rawat@egovernments.org
  version: 2.0.0
servers:
- url: /pt-calculator-v2/
paths:
  /propertytax/_updatedemand:
    post:
      tags:
        - Property Tax Calculation
      summary: updateDemand
      operationId: updateDemandUsingPOST
      parameters:
        - name: amountExpected
          in: query
          required: false
          style: form
          schema:
            type: number
            format: bigdecimal
        - name: assessmentNumber
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: assessmentYear
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: billId
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: consumerCodes
          in: query
          required: true
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: propertyId
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: tenantId
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: toDate
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DemandResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /propertytax/mutation/_calculate:
    post:
      tags:
        - Property Tax Calculation
      summary: mutationCalculator
      operationId: mutationCalculatorUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequestV2'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Calculation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /propertytax/_estimate:
    post:
      tags:
      - Property Tax Calculation
      summary: Generates estimated Property tax that will be incured once this particular
        property is added in to the system (note- only one property should be sent
        to the api for estimation, anything more than one will be ignored.)
      description: Estimates the Property Tax to be paid for given property .
      requestBody:
        description: required parameters have to be populated
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CalculationReq'
        required: true
      responses:
        200:
          description: Success response is calculated tax.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalculationRes'
        400:
          description: New water connection request failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
        404:
          description: tenantId provided was not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: calculationReq
  /propertytax/_calculate:
    post:
      tags:
      - Property Tax Calculation
      summary: Calculates Property tax and generates the respective demands in the
        system.
      description: Calculate Property Tax based on criteria.
      requestBody:
        description: required parameters have to be populated
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CalculationReq'
        required: true
      responses:
        200:
          description: Success response calculated tax with connection number and
            amount.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalculationRes'
        400:
          description: New water connection request failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
        404:
          description: tenantId provided was not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: calculationReq
  /propertytax/_getbill:
    post:
      tags:
      - Property Tax Bill
      summary: Updates demand with time based penalty if applicable and Generates
        bill for the given criteria.
      description: Generates bill for payment.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: propertyId
        in: query
        description: Primary key of Property object.
        required: true
        schema:
          type: string
      - name: assessmentNumber
        in: query
        description: Unique id of the assessment.
        required: true
        schema:
          type: string
      - name: assessmentYear
        in: query
        description: Year for which the property is being assessed, assessment year
          should be given in yyyy-yy format (2013-14).
        schema:
          type: string
      - name: billId
        in: query
        description: Primary key of bill object.
        schema:
          type: string
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Success response calculated tax with connection number and
            amount.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalculationRes'
        400:
          description: New water connection request failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
        404:
          description: tenantId provided was not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
  /propertytax/v2/_estimate:
    post:
      tags:
        - Property Tax Calculation
      summary: getTaxEstimation
      operationId: getTaxEstimationUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequestV2'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalculationRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found    
  /billingslab/_search:
    post:
      tags:
      - BillingSlab
      summary: Get the list of properties defined in the system.
      description: |
        Get the properties list based on the input parameters.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: active
        in: query
        description: True will be set in cases where only active properties are needed
          and False will be set when inactive properties are needed and no value will
          be set when all properties are needed.
        allowEmptyValue: true
        schema:
          type: boolean
          format: varchar
      - name: propertyId
        in: query
        description: Primary key of Property object.
        schema:
          type: string
          format: varchar
      - name: assessmentNumber
        in: query
        description: The unique reference number for a property.
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: true
          maxLength: 128
          minLength: 4
          type: string
      - name: oldAssessmentNumber
        in: query
        description: The unique old assessment no for a Property.
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: true
          maxLength: 128
          minLength: 4
          type: string
      - name: locality
        in: query
        description: Locality boundary where the property is located.
        schema:
          type: integer
          format: int64
      - name: acknowldgementNumber
        in: query
        description: The acknowldgement number no for a property.
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: true
          maxLength: 64
          minLength: 1
          type: string
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingSlabRes'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
  /billingslab/_create:
    post:
      tags:
      - BillingSlab
      summary: Create new properties.
      description: API to create new properties.
      requestBody:
        description: Details for the new property + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BillingSlabReq'
        required: true
      responses:
        201:
          description: Property(s) created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingSlabRes'
        400:
          description: Property(s) creation failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: billingSlab
  /billingslab/_update:
    post:
      tags:
      - BillingSlab
      summary: Update existing properties.
      description: Updates a given `Property` with newer details.
      requestBody:
        description: Request header for the property Request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BillingSlab'
        required: true
      responses:
        200:
          description: Update Property(s) successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingSlab'
        400:
          description: Update Property(s) failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: property
  /billingslab/mutation/_create:
    post:
      tags:
        - BillingSlab
      summary: create new mutation properties
      operationId: mutationCreateUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutationBillingSlabReq'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /billingslab/mutation/_search:
    post:
      tags:
        - BillingSlab
      summary: Get the list of existing mutation properties
      operationId: searchMutationUsingPOST
      parameters:
        - name: id
          in: query
          required: false
          style: pipeDelimited
          description: Unique Identifier(UUID) of the land for internal reference.
          schema:
            type: array
            items:
              type: string
        - name: marketValue
          in: query
          required: false
          style: form
          description: market value of the item
          schema:
            type: number
            format: double
        - name: ownerShipCategory
          in: query
          required: false
          style: form
          description: one of different categories of legal ownership
          schema:
            type: string
        - name: propertySubType
          in: query
          required: false
          style: form
          description: defined by the type of ownership, which can be determined by the legal description or how the property is deeded
          schema:
            type: string
        - name: propertyType
          in: query
          required: false
          style: form
          description: value for dwelling configuration of the property
          schema:
            type: string
        - name: subOwnerShipCategory
          in: query
          required: false
          style: form
          description: subOwnerShipCategory of product
          schema:
            type: string
        - name: tenantId
          in: query
          required: true
          style: form
          description: Unique ULB identifier.
          schema:
            type: string
        - name: usageCategoryMajor
          in: query
          required: false
          style: form
          description: category of product usage
          schema:
            type: string
        - name: usageCategoryMinor
          in: query
          required: false
          style: form
          description: usageCategoryMinor
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /billingslab/mutation/_update:
    post:
      tags:
        - BillingSlab
      summary: Update the list of existing mutation properties
      operationId: updateMutationUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutationBillingSlabReq'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found    
components:
  schemas:
    CalulationCriteria:
      required:
      - tenantId
      type: object
      properties:
        property:
          $ref: '#/components/schemas/Property'
        assesmentNumber:
          maxLength: 64
          minLength: 2
          type: string
          description: assessment number 
        assesmentYear:
          maxLength: 64
          minLength: 2
          type: string
        oldAssesmentNumber: 
          maxLength: 64
          minLength: 2
          type: string
          description: previous assessment number
        tenantId:
          maxLength: 256
          minLength: 2
          type: string
          description: Unique ULB Identifier
    Calculation:
      type: object
      properties:
        connectionNumber:
          type: string
        totalAmount:
          type: number
          description: Total payable tax amount.
          format: double
        penalty:
          type: number
          description: Penality if applicable
          format: double
        exemption:
          type: number
          description: Penality amount if applicable.
          format: double
        rebate:
          type: number
          description: Rebate amount if applicable.
          format: double
        fromDate:
          type: integer
          description: date from which the calculation is recorded
          format: int64
        toDate:
          type: integer
          format: int64
        tenantId:
          maxLength: 256
          minLength: 2
          type: string
          description: Unique ULB identifier
    BillingSlab:
      required:
      - tenantId
      type: object
      properties:
        tenantId:
          maxLength: 128
          minLength: 4
          type: string
          description: Unique ulb identifier
        id:
          maxLength: 64
          minLength: 2
          type: string
          description: unique identifier of the billing slab uuid
        propertyType:
          maxLength: 64
          minLength: 2
          type: string
          description: Based on property type charges will change.
        propertySubType:
          maxLength: 64
          minLength: 2
          type: string
          description: Based on property type charges will change.
        usageCategoryMajor:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        usageCategoryMinor:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        usageCategorySubMinor:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        usageCategoryDetail:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        OwnerShipCategory:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        SubOwnerShipCategory:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        fromFloor:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        toFloor:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        area:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        fromPlotSize:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        toPlotSize:
          maxLength: 64
          minLength: 2
          type: string
          description: Floor Number.
        unitRate:
          type: number
          description: Floor Number.
          format: double
    CalculationReq:
      required:
      - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        CalulationCriteria:
          type: array
          items:
            $ref: '#/components/schemas/CalulationCriteria'
    CalculationRes:
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Calculation:
          type: array
          items:
            $ref: '#/components/schemas/Calculation'
    BillingSlabReq:
      required:
      - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        BillingSlab:
          type: array
          items:
            $ref: '#/components/schemas/BillingSlab'
    BillingSlabRes:
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        BillingSlab:
          type: array
          items:
            $ref: '#/components/schemas/BillingSlab'
    ErrorRes:
      required:
      - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Errors:
          type: array
          description: Error response array corresponding to Request Object array.
            In case of single object submission or _search related paths this may
            be an array of one error element
          items:
            $ref: '#/components/schemas/Error'
      description: All APIs will return ErrorRes in case of failure which will carry
        ResponseInfo as metadata and Error object as actual representation of error.
        In case of bulk apis, some apis may chose to return the array of Error objects
        to indicate individual failure.
    ResponseInfo:
      required:
      - apiId
      - status
      - ts
      - ver
      type: object
      properties:
        apiId:
          maxLength: 128
          type: string
          description: unique API ID
        ver:
          maxLength: 32
          type: string
          description: API version
        ts:
          type: integer
          description: response time in epoch
          format: int64
        resMsgId:
          maxLength: 256
          type: string
          description: unique response message id (UUID) - will usually be the correlation
            id from the server
        msgId:
          maxLength: 256
          type: string
          description: message id of the request
        status:
          type: string
          description: status of request processing - to be enhanced in futuer to
            include INPROGRESS
          enum:
          - SUCCESSFUL
          - FAILED
      description: ResponseInfo should be used to carry metadata information about
        the response from the server. apiId, ver and msgId in ResponseInfo should
        always correspond to the same values in respective request's RequestInfo.
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Error Code will be module specific error label/code to identiffy
            the error. All modules should also publish the Error codes with their
            specific localized values in localization service to ensure clients can
            print locale specific error messages. Example for error code would be
            User.NotFound to indicate User Not Found by User/Authentication service.
            All services must declare their possible Error Codes with brief description
            in the error response section of their API path.
        message:
          type: string
          description: English locale message of the error code. Clients should make
            a separate call to get the other locale description if configured with
            the service. Clients may choose to cache these locale specific messages
            to enhance performance with a reasonable TTL (May be defined by the localization
            service based on tenant + module combination).
        description:
          type: string
          description: Optional long description of the error to help clients take
            remedial action. This will not be available as part of localization service.
        params:
          type: array
          description: Some error messages may carry replaceable fields (say $1, $2)
            to provide more context to the message. E.g. Format related errors may
            want to indicate the actual field for which the format is invalid. Client's
            should use the values in the param array to replace those fields.
          items:
            type: string
      description: Error object will be returned as a part of reponse body in conjunction
        with ResponseInfo as part of ErrorResponse whenever the request processing
        status in the ResponseInfo is FAILED. HTTP return in this scenario will usually
        be HTTP 400.
    Property:
      allOf:
      - $ref: '#/components/schemas/PropertyInfo'
      - required:
        - propertyDetail
        type: object
        properties:
          creationReason:
            maxLength: 256
            minLength: 1
            type: string
            description: New property comes into system either property is newly constructed
              or existing property got sub divided. Here the reason for creation will
              be captured.
            enum:
            - NEWPROPERTY
            - SUBDIVISION
          occupancyDate:
            type: integer
            description: Property is constructed but the tax will be applicable only
              from the occupation date (time in epoch). System capture that date here.
            format: int64
          propertyDetail:
            type: array
            items:
              $ref: '#/components/schemas/PropertyDetail'
        description: A Object holds the basic data for a property
    PropertyInfo:
      required:
      - address
      type: object
      properties:
        propertyId:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique Identifier of the Property.
          readOnly: true
        tenantId:
          maxLength: 256
          minLength: 2
          type: string
          description: tenant id of the Property
        acknowldgementNumber:
          maxLength: 64
          minLength: 1
          type: string
          description: Acknowldgement number given to citizen on submitting the application
            for creation or modification of the property.
          readOnly: true
        oldPropertyId:
          maxLength: 256
          minLength: 1
          type: string
          description: Old upic no of the Property. ULBs have the existing property
            in their system/manual records with their identification number, they
            want to continue the old reference number in this case the same identification
            number will be captured here.
        status:
          maxLength: 64
          minLength: 2
          type: string
          description: status of the Property
          enum:
          - ACTIVE
          - INACTIVE
        address:
          $ref: '#/components/schemas/Address'
      description: This is lightweight property object that can be used as reference
        by definitions needing property linking. Actual Property Object extends this
        to include more elaborate attributes of the property.
    Address:
      allOf:
      - $ref: '#/components/schemas/Address_2'
      - type: object
        properties:
          buildingName:
            maxLength: 64
            minLength: 2
            type: string
            description: Name of the building
          street:
            maxLength: 64
            minLength: 2
            type: string
            description: Street Name
          locality:
            $ref: '#/components/schemas/Boundary'
        description: Address of the property.
    Address_2:
      type: object
      properties:
        tenantId:
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        doorNo:
          type: string
          description: House number or door number.
        latitude:
          type: number
          description: latitude of the address
          format: double
        longitude:
          type: number
          description: longitude of the address
          format: double
        addressId:
          type: string
          description: System generated id for the address
          readOnly: true
        addressNumber:
          type: string
          description: House, Door, Building number in the address
        type:
          type: string
          description: Blood group of the user.
        addressLine1:
          type: string
          description: Apartment, Block, Street of the address
        addressLine2:
          type: string
          description: Locality, Area, Zone, Ward of the address
        landmark:
          type: string
          description: additional landmark to help locate the address
        city:
          type: string
          description: City of the address. Can be represented by the tenantid itself
        pincode:
          type: string
          description: PIN code of the address. Indian pincodes will usually be all
            numbers.
        detail:
          type: string
          description: more address detail as may be needed
      description: |
        Representation of a address. Indiavidual APIs may choose to extend from this using allOf if more details needed to be added in their case.
    AuditDetails:
      title: AuditDetails
      type: object
      properties:
        createdBy:
          type: string
          description: information about user who created the service
        createdTime:
          type: integer
          description: time of creation of service
          format: int64
        lastModifiedBy:
          type: string
          description: information about last user who modified the service
        lastModifiedTime:
          type: integer
          description: time of modification of service
          format: int64    
    AssessmentRequestV2:
      title: AssessmentRequestV2
      type: object
      properties:
        Assessment:
          $ref: '#/components/schemas/AssessmentV2'
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
    AssessmentV2:
      title: AssessmentV2
      required:
        - assessmentDate
        - financialYear
        - propertyId
        - source
        - tenantId
      type: object
      properties:
        additionalDetails:
          $ref: '#/components/schemas/JsonNode'
        assessmentDate:
          type: integer
          format: int64
        assessmentNumber:
          type: string
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        channel:
          type: string
        documentV2s:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DocumentV2'
        financialYear:
          type: string
        id:
          type: string
        propertyId:
          type: string
        source:
          type: string
          enum:
            - FIELD_SURVEY
            - MOBILEAPP
            - MUNICIPAL_RECORDS
            - WEBAPP
        status:
          type: string
        tenantId:
          type: string
        unitUsageList:
          type: array
          items:
            $ref: '#/components/schemas/UnitUsage'      
    JsonNode:
      title: JsonNode
      type: object
      properties:
        array:
          type: boolean
        bigDecimal:
          type: boolean
        bigInteger:
          type: boolean
        binary:
          type: boolean
        boolean:
          type: boolean
        containerNode:
          type: boolean
        double:
          type: boolean
        empty:
          type: boolean
        float:
          type: boolean
        floatingPointNumber:
          type: boolean
        int:
          type: boolean
        integralNumber:
          type: boolean
        long:
          type: boolean
        missingNode:
          type: boolean
        nodeType:
          type: string
          enum:
            - ARRAY
            - BINARY
            - BOOLEAN
            - MISSING
            - 'NULL'
            - NUMBER
            - OBJECT
            - POJO
            - STRING
        'null':
          type: boolean
        number:
          type: boolean
        object:
          type: boolean
        pojo:
          type: boolean
        short:
          type: boolean
        textual:
          type: boolean
        valueNode:
          type: boolean        
    Boundary:
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
          description: code of the boundary.
        name:
          type: string
          description: name of the boundary.
        label:
          type: string
          description: localized label for the boundry.
        latitude:
          type: string
          description: latitude of the boundary.
        longitude:
          type: string
          description: longitude of the boundary.
        children:
          type: array
          items:
            $ref: '#/components/schemas/Boundary'
        materializedPath:
          type: string
          description: materialized path of the boundary - this would be of the format
            tenantid.[code] from parentt till teh current boundary
          readOnly: true
    PropertyDetail:
      type: object
      properties:
        financialYear:
          type: string
          description: Latest tax paid year.
        assessmentNumber:
          maxLength: 256
          minLength: 2
          type: string
          description: unique assesment number for each financial year.
          readOnly: true
        assessmentDate:
          type: integer
          description: There will be work flow to create a new property in a system.
            The assessment date is the final approval and UPIC no generation date.
          format: int64
        propertyType:
          maxLength: 64
          minLength: 1
          type: string
          description: Type of a property like Private, Vacant Land, State Government,
            Central Government etc.
        propertySubType:
          maxLength: 64
          minLength: 1
          type: string
          description: Sub Type of a property defined in mdms 'PropertySubType' Masetr.
        usageCategoryMajor:
          maxLength: 64
          minLength: 1
          type: string
          description: This is about the usage of the property like Residential, Non-residential,
            Mixed(Property witch is gettiong used for Residential, Non-residential
            purpose)
        owners:
          type: array
          description: Property owners, these will be citizen users in system.
          items:
            $ref: '#/components/schemas/OwnerInfo'
        source:
          maxLength: 64
          minLength: 1
          type: string
          description: Source of a assessment data. The properties will be created
            in a system based on the data avaialble in their manual records or during
            field survey. There can be more from client to client.
          enum:
          - MUNICIPAL_RECORDS
          - FIELD_SURVEY
        noOfFloors:
          type: integer
          description: no of floors in the property
          format: int64
        landArea:
          type: number
          description: Land area of the property in sq ft
          format: float
        buildUpArea:
          type: number
          description: Total built up area in sq ft
          format: float
        units:
          type: array
          description: List of Units in the property. E.g. A property might have 2
            units in ground floor and 1 ion first floor. Unit can be Room, floor or
            any bounded area with a defined usage.
          items:
            $ref: '#/components/schemas/Unit'
        documents:
          type: array
          description: The documents attached during assessment, modification or any
            transaction happened on the property.
          items:
            $ref: '#/components/schemas/Document'
        additionalDetails:
          type: string
          description: The json (array of '#/definitions/Factor')
        channel:
          maxLength: 64
          minLength: 4
          type: string
          description: Property can be created from different channels Eg. System
            (properties created by ULB officials), CFC Counter (From citizen faciliation
            counters) etc. Here we are defining some known channels, there can be
            more client to client.
          enum:
          - SYSTEM
          - CFC_COUNTER
          - CITIZEN
          - DATA_ENTRY
          - MIGRATION
      description: Financial year wise property details will be capture here. For
        each financial year property details may change.
    OwnerInfo:
      allOf:
      - $ref: '#/components/schemas/User'
      - type: object
        properties:
          isPrimaryOwner:
            type: boolean
            description: The owner is primary or not
          ownerShipPercentage:
            type: number
            description: Ownership percentage.
            format: double
          ownerType:
            maxLength: 256
            minLength: 4
            type: string
            description: Type of owner, based on this option Exemptions will be applied.
              This is master data defined in mdms.
    User:
      required:
      - active
      - gender
      - locale
      - mobileNumber
      - name
      - tenantId
      - type
      - userName
      type: object
      properties:
        id:
          type: integer
          description: The unique id an user.
          format: int64
        userName:
          maxLength: 64
          minLength: 1
          type: string
          description: The unique username used for user login.
        password:
          maxLength: 64
          type: string
          description: Password for user login.
          format: password
        salutation:
          maxLength: 5
          type: string
          description: The salutation of user name. Example- Mr, Miss, Mrs
        name:
          maxLength: 100
          minLength: 3
          type: string
          description: The full name of the user.
        gender:
          type: string
          description: Gender of the user.
        mobileNumber:
          maxLength: 10
          type: string
          description: Mobile number ofuser the user
        emailId:
          maxLength: 128
          type: string
          description: Email address of the user
        altContactNumber:
          maxLength: 10
          type: string
          description: Alternate contact number of the user
        pan:
          maxLength: 10
          type: string
          description: PAN number of the user
        aadhaarNumber:
          maxLength: 12
          pattern: '[0-9]'
          type: string
          description: Aadhaar number of the user
        permanentAddress:
          maxLength: 300
          type: string
          description: Permanent address of the user.
        permanentCity:
          maxLength: 300
          type: string
          description: City of the permanent address.
        permanentPincode:
          maxLength: 6
          type: string
          description: Permanent address pincode.
        correspondenceCity:
          maxLength: 50
          type: string
          description: City of the correspondence address.
        correspondencePincode:
          maxLength: 6
          type: string
          description: Permanent address pincode.
        correspondenceAddress:
          maxLength: 300
          type: string
          description: Correspondence address of the user.
        active:
          type: boolean
          description: True if the user is active and False if the user is inactive.
        dob:
          type: string
          description: Data of bith of the user in dd/mm/yyyy format.
          format: date
        pwdExpiryDate:
          type: string
          description: Date on which the password registered will expire.
          format: date
          readOnly: true
        locale:
          maxLength: 10
          type: string
          description: Value will be set to "en_IN".
        type:
          maxLength: 20
          type: string
          description: System set value internally. For employee value will be always
            "EMPLOYEE". For citizen value will be "CITIZEN".
        signature:
          type: string
          description: Image to be loaded for the signature of the employee
        accountLocked:
          type: boolean
          description: Set to True if account is locked after several incorrect password
            attempt. False if account is not locked.
        roles:
          type: array
          description: List of roles that are attached to the user.
          items:
            $ref: '#/components/schemas/Role'
        fatherOrHusbandName:
          maxLength: 100
          type: string
          description: Name of user's father or husband.
        bloodGroup:
          maxLength: 3
          type: string
          description: Blood group of the user.
        identificationMark:
          maxLength: 300
          type: string
          description: Any identification mark of the person.
        photo:
          type: string
          description: Image to be loaded for the photo of the user
        createdBy:
          type: integer
          description: Id of the user who created the record.
          format: int64
        createdDate:
          type: string
          description: Date on which the user master data was added into the system.
          format: date
        lastModifiedBy:
          type: integer
          description: Id of the user who last modified the record.
          format: int64
        lastModifiedDate:
          type: string
          description: Date on which the user master data was last modified.
          format: date
        otpReference:
          type: string
          description: This is the UUID token that we genarate as part of OTP.
        tenantId:
          type: string
          description: Unique Identifier of the tenant, Like AP, AP.Kurnool etc.
    Role:
      required:
      - name
      - tenantId
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the role.
          format: int64
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: The Name of the Role.
        code:
          maxLength: 50
          minLength: 2
          type: string
          description: The Code of the Role.
        description:
          maxLength: 256
          type: string
          description: The description of the Role.
        createdBy:
          type: integer
          description: Id of the user who created the record.
          format: int64
        createdDate:
          type: string
          description: Date on which the role master data was added into the system.
          format: date
        lastModifiedBy:
          type: integer
          description: Id of the user who last modified the record.
          format: int64
        lastModifiedDate:
          type: string
          description: Date on which the role master data was last modified.
          format: date
        tenantId:
          type: string
          description: Unique Identifier of the tenant, Like AP, AP.Kurnool etc.
    Unit:
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier of the Property(UUID).
        tenantId:
          maxLength: 256
          minLength: 2
          type: string
          description: tenant id of the Property
        floorNo:
          maxLength: 64
          minLength: 1
          type: string
          description: floor no for the floor
        unitType:
          maxLength: 64
          minLength: 1
          type: string
          description: Unit type.
        unitArea:
          type: number
          description: Area of the defined Unit.
          format: float
        usageCategoryMajor:
          maxLength: 64
          minLength: 1
          type: string
          description: This is about the usage of the property like Residential, Non-residential,
            Mixed(Property witch is gettiong used for Residential, Non-residential
            purpose)
        usageCategoryMinor:
          maxLength: 64
          minLength: 1
          type: string
          description: Sub category of 'UsageCategoryMajor' defined in 'UsageCategoryMinor'
            master of mdms.
        usageCategorySubMinor:
          maxLength: 64
          minLength: 1
          type: string
          description: Sub category of 'usageCategoryMinor' defined in 'UsageCategorySubMinor'
            master of mdms.
        usageCategoryDetail:
          maxLength: 64
          minLength: 1
          type: string
          description: Sub category of 'usageCategorySubMinor' defined in 'usageCategoryDetail'
            master of mdms.
        occupancyType:
          maxLength: 64
          minLength: 1
          type: string
          description: end date for the unit usage.
          enum:
          - Owner
          - Tenant
        occupancyDate:
          type: number
          description: Date on which unit is occupied.
          format: int64
        constructionType:
          maxLength: 64
          minLength: 1
          type: string
          description: Construction type is defined in MDMS ConstructionTypeMaster.
        constructionSubType:
          maxLength: 64
          minLength: 1
          type: string
          description: Construction Sub type is defined in MDMS 'ConstructionSubType'
            master, this is sub category of constructionType.
        arv:
          type: number
          description: Annual rental value(arv), if occupancy type is Tenant.
          format: double
    Document:
      type: object
      properties:
        id:
          type: integer
          description: unique id of the Document.
          format: int64
        documentType:
          type: string
          description: unique document type code, should be validated with document
            type master
        fileStore:
          type: string
          description: File store reference key.
      description: This object holds list of documents attached during the transaciton
        for a property
    RequestInfo:
      required:
      - action
      - apiId
      - msgId
      - ts
      - ver
      type: object
      properties:
        apiId:
          maxLength: 128
          type: string
          description: unique API ID
        ver:
          maxLength: 32
          type: string
          description: API version - for HTTP based request this will be same as used
            in path
        ts:
          type: integer
          description: time in epoch
          format: int64
        action:
          maxLength: 32
          type: string
          description: API action to be performed like _create, _update, _search (denoting
            POST, PUT, GET) or _oauth etc
        did:
          maxLength: 1024
          type: string
          description: Device ID from which the API is called
        key:
          maxLength: 256
          type: string
          description: API key (API key provided to the caller in case of server to
            server communication)
        msgId:
          maxLength: 256
          type: string
          description: Unique request message id from the caller
        requesterId:
          maxLength: 256
          type: string
          description: UserId of the user calling
        authToken:
          type: string
          description: //session/jwt/saml token/oauth token - the usual value that
            would go into HTTP bearer token
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        correlationId:
          type: string
          readOnly: true
      description: RequestInfo should be used to carry meta information about the
        requests to the server as described in the fields below. All eGov APIs will
        use requestinfo as a part of the request body to carry this meta information.
        Some of this information will be returned back from the server as part of
        the ResponseInfo in the response body to ensure correlation.
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'    
    UserInfo:
      required:
      - primaryrole
      - tenantId
      - userName
      type: object
      properties:
        tenantId:
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        id:
          type: integer
          description: User id of the authenticated user. Will be deprecated in future
          format: int32
        userName:
          type: string
          description: Unique user name of the authenticated user
        mobile:
          type: string
          description: mobile number of the autheticated user
        email:
          type: string
          description: email address of the authenticated user
        primaryrole:
          type: array
          description: List of all the roles for the primary tenant
          items:
            $ref: '#/components/schemas/Role_2'
        additionalroles:
          type: array
          description: array of additional tenantids authorized for the authenticated
            user
          items:
            $ref: '#/components/schemas/TenantRole'
      description: This is acting ID token of the authenticated user on the server.
        Any value provided by the clients will be ignored and actual user based on
        authtoken will be used on the server.
    Role_2:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 64
          type: string
          description: Unique name of the role
        description:
          type: string
          description: brief description of the role
      description: |
        minimal representation of the Roles in the system to be carried along in UserInfo with RequestInfo meta data. Actual authorization service to extend this to have more role related attributes
    TenantRole:
      required:
      - roles
      - tenantId
      type: object
      properties:
        tenantId:
          type: string
          description: tenantid for the tenant
        roles:
          type: array
          description: Roles assigned for a particular tenant - array of role codes/names
          items:
            $ref: '#/components/schemas/Role_2'
      description: User role carries the tenant related role information for the user.
        A user can have multiple roles per tenant based on the need of the tenant.
        A user may also have multiple roles for multiple tenants.
    DemandResponse:
      title: DemandResponse
      type: object
      properties:
        Demands:
          type: array
          items:
            $ref: '#/components/schemas/Demand'
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'    
    Demand:
      title: Demand
      type: object
      properties:
        additionalDetails:
          type: object
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        businessService:
          type: string
        consumerCode:
          type: string
        consumerType:
          type: string
        demandDetails:
          type: array
          items:
            $ref: '#/components/schemas/DemandDetail'
        id:
          type: string
        minimumAmountPayable:
          type: number
          format: bigdecimal
        payer:
          $ref: '#/components/schemas/UserRes'
        status:
          type: string
          enum:
            - ACTIVE
            - ADJUSTED
            - CANCELLED
        taxPeriodFrom:
          type: integer
          format: int64
        taxPeriodTo:
          type: integer
          format: int64
        tenantId:
          type: string      
    DemandDetail:
      title: DemandDetail
      required:
        - collectionAmount
        - taxAmount
        - taxHeadMasterCode
      type: object
      properties:
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        collectionAmount:
          type: number
          format: bigdecimal
        demandId:
          type: string
          description: Unique id for demand
        id:
          type: string
          description: Unique Identifier(UUID) of the Demand application for internal reference.
        taxAmount:
          type: number
          description: amount of tax collected
          format: bigdecimal
        taxHeadMasterCode:
          type: string
        tenantId:
          type: string      
          description: tenant id of the Demand
    RoleRes:
      title: RoleRes
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string      
    UserRes:
      title: UserRes
      type: object
      properties:
        emailId:
          type: string
        id:
          type: integer
          format: int64
        mobileNumber:
          type: string
        name:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleRes'
        tenantId:
          type: string
        type:
          type: string
        userName:
          type: string
        uuid:
          type: string      
    AddressV2:
      title: AddressV2
      type: object
      properties:
        additionalDetails:
          type: object
        buildingName:
          type: string
        city:
          type: string
        country:
          type: string
        district:
          type: string
        doorNo:
          type: string
        id:
          type: string
        landmark:
          type: string
        locality:
          $ref: '#/components/schemas/LocalityV2'
        pincode:
          type: string
        plotNo:
          type: string
        region:
          type: string
        state:
          type: string
        street:
          type: string
        tenantId:
          type: string      
    LocalityV2:
      title: LocalityV2
      type: object
      properties:
        area:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/LocalityV2'
        code:
          type: string
        label:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        materializedPath:
          type: string
        name:
          type: string
    DocumentV2:
      title: DocumentV2
      required:
        - documentType
        - fileStoreId
      type: object
      properties:
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        documentType:
          type: string
        documentUid:
          type: string
        fileStoreId:
          type: string
        id:
          type: string
        status:
          type: string
    InstitutionV2:
      title: InstitutionV2
      type: object
      properties:
        additionalDetails:
          type: object
        designation:
          type: string
        id:
          type: string
        name:
          type: string
        nameOfAuthorizedPerson:
          type: string
        tenantId:
          type: string
        type:
          type: string      
    PropertyV2:
      title: PropertyV2
      type: object
      properties:
        accountId:
          type: string
        acknowldgementNumber:
          type: string
        additionalDetails:
          type: object
        address:
          $ref: '#/components/schemas/AddressV2'
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        channel:
          type: string
        creationReason:
          type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentV2'
        id:
          type: string
        institution:
          $ref: '#/components/schemas/InstitutionV2'
        landArea:
          type: number
          format: double
        linkedProperties:
          type: array
          items:
            type: string
        noOfFloors:
          type: integer
          format: int64
        oldPropertyId:
          type: string
        owners:
          type: array
          items:
            $ref: '#/components/schemas/OwnerInfo'
        ownershipCategory:
          type: string
        propertyId:
          type: string
        propertyType:
          type: string
        source:
          type: string
        status:
          type: string
        superBuiltUpArea:
          type: number
          format: bigdecimal
        surveyId:
          type: string
        tenantId:
          type: string
        units:
          type: array
          items:
            $ref: '#/components/schemas/UnitV2'
        usageCategory:
          type: string      
    PropertyRequestV2:
      title: PropertyRequestV2
      type: object
      properties:
        Property:
          $ref: '#/components/schemas/PropertyV2'
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'      
    UnitV2:
      title: UnitV2
      required:
        - constructionDetail
        - usageCategory
      type: object
      properties:
        active:
          type: boolean
        additionalDetails:
          type: object
        arv:
          type: number
          format: bigdecimal
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        constructionDetail:
          $ref: '#/components/schemas/ConstructionDetail'
        floorNo:
          type: integer
          format: int32
        id:
          type: string
        occupancyDate:
          type: integer
          format: int64
        occupancyType:
          type: string
        tenantId:
          type: string
        unitType:
          type: string
        usageCategory:
          type: string      
    UnitUsage:
      title: UnitUsage
      required:
        - id
        - occupancyDate
        - occupancyType
        - tenantId
        - unitId
      type: object
      properties:
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        id:
          type: string
        occupancyDate:
          type: integer
          format: int64
        occupancyType:
          type: string
        tenantId:
          type: string
        unitId:
          type: string
        usageCategory:
          type: string
    ConstructionDetail:
      title: ConstructionDetail
      type: object
      properties:
        builtUpArea:
          type: number
          description: area of a premise measured from the external perimeter wall surfaces
          format: bigdecimal
        carpetArea:
          type: number
          description: the net usable floor area of an apartment
          format: bigdecimal
        constructionDate:
          type: integer
          description: date of construction
          format: int64
        constructionType:
          type: string
          description: type of construction
        dimensions:
          type: object
          description: dimensions for the construction 
        plinthArea:
          type: number
          description: the space covered by the floor of the property
          format: bigdecimal
        superBuiltUpArea:
          type: number
          description: the saleable area, which includes the carpet area, along with the terrace, balconies, areas occupied by walls, and areas occupied by common/shared construction
          format: bigdecimal      
    MutationBillingSlabReq:
      title: MutationBillingSlabReq
      type: object
      properties:
        MutationBillingSlab:
          type: array
          items:
            $ref: '#/components/schemas/MutationBillingSlab'
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'      
    MutationBillingSlab:
      title: MutationBillingSlab
      required:
        - fixedAmount
        - rate
        - tenantId
      type: object
      properties:
        fixedAmount:
          type: number
          format: double
        id:
          type: string
        maxMarketValue:
          type: number
          format: double
        minMarketValue:
          type: number
          format: double
        ownerShipCategory:
          type: string
        propertySubType:
          type: string
        propertyType:
          type: string
        rate:
          type: number
          format: double
        subOwnerShipCategory:
          type: string
        tenantId:
          type: string
        type:
          type: string
          enum:
            - FLAT
            - RATE
        usageCategoryDetail:
          type: string
        usageCategoryMajor:
          type: string
        usageCategoryMinor:
          type: string
        usageCategorySubMinor:
          type: string      