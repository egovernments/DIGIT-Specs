openapi: 3.0.1
info:
  title: eGov User Event System.
  description: "APIs for Events information. This module handles Below functionality.\
    \ \n1. Create/Update new event\n2. Search existing event\n3. An event in the system\
    \ includes -\n   a. System generated events like changes in state of a complaint,\
    \ PT or TL etc.\n   b. Public Message broadcast\n   c. Events that happen within\
    \ an ULB and are published on mSeva.\n   d. any other events that are to be notified\
    \ to the user.\n"
  contact:
    name: eGovernments Foundation
    email: contacts@egovernments.org
  version: 1.0.0
servers:
- url: /user-event
tags:
- name: Events
  description: APIs required for Event handling.
paths:
  /v1/events/_search:
    post:
      description: |-
        1. Search and get events based on defined search criteria.
      tags:
        - Events
      summary: search
      operationId: searchUsingPOST
      parameters:
        - name: eventTypes
          in: query
          description: Array of event types for which the events are being searched
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: epoch date
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: ids
          in: query
          description: unique identifier (uuid) of events
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: isCitizenSearch
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: isEventsCountCall
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: name
          in: query
          description: Array of event name for which the events are being searched.
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: query
          description: offset
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: postedBy
          in: query
          description: unique identifier (uuid) of the employees posting the event. 
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: recepients
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: referenceIds
          in: query
          description: unique id labels that identify a specific item
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: roles
          in: query
          description: List of Roles of employee
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: source
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          description: current status in the system
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: tenantId
          in: query
          description: unique identifier of the ULB.
          required: true
          style: form
          schema:
            type: string
        - name: toDate
          in: query
          description: epoch date
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: userids
          in: query
          description: unique identifier (uuid) of the users.
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventResponse'
        '201':
          description: Created
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/events/_create:
    post:
      tags:
      - Events
      summary: Create new Event
      description: Creates new event
      requestBody:
        description: Details for the new Events + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      responses:
        201:
          description: ReponseInfo with Events created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventResponse'
        400:
          description: Events creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: EventRequest
  /v1/events/_update:
    post:
      tags:
      - Events
      summary: Update existing events
      description: This API is used to update existing events in the system.
      requestBody:
        description: Details for the new Events + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      responses:
        201:
          description: ReponseInfo with Events updated sudcessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventResponse'
        400:
          description: Events(s) updation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: EventRequest
  /v1/events/lat/_update:
    post:
      description: Update event 
      tags:
        - Events
      summary: update lat
      operationId: updatelltUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        '201':
          description: Created
        400:
          description: Events(s) updation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found    
  /v1/events/notifications/_count:
    post:
      description: count event notifications
      tags:
        - Events
      summary: count
      operationId: countUsingPOST
      parameters:
        - name: eventTypes
          in: query
          description: Array of event types for which the events are being searched
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: epoch date
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: ids
          in: query
          description: unique identifier (uuid) of events
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: isCitizenSearch
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: isEventsCountCall
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: name
          in: query
          description: Array of event name for which the events are being searched.
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: query
          description: offset
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: postedBy
          in: query
          description: unique identifier (uuid) of the employees posting the event. 
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: recepients
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: referenceIds
          in: query
          description: unique id labels that identify a specific item
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: roles
          in: query
          description: List of Roles of employee
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: source
          in: query
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          description: current status in the system
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: tenantId
          in: query
          description: unique identifier of the ULB.
          required: true
          style: form
          schema:
            type: string
        - name: toDate
          in: query
          description: epoch date
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: userids
          in: query
          description: unique identifier (uuid) of the users.
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationCountResponse'
        '201':
          description: Created
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
components:
  schemas:
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
    Action:
      required:
      - actionUrls
      type: object
      properties:
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
          description: Unique Identifier of ULB
        id:
          maxLength: 64
          minLength: 2
          type: string
          description: Unique Identifier of the action (UUID)
        eventId:
          maxLength: 64
          minLength: 2
          type: string
          description: Event Id for which this action is applicable.
        actionUrls:
          type: array
          description: Array of action urls and labels.
          items:
            $ref: '#/components/schemas/ActionItem'
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: Object holds that holds basic data for actions associated to an
        event.
    Event:
      required:
      - tenantId
      - eventType
      - name
      - description
      - source
      type: object
      properties:
        tenantId:
          type: string
          description: Unique Identifier of ULB
        id:
          type: string
          description: Unique Identifier of the Event (UUID)
          readOnly: true
        referenceId:
          type: string
          description: Unique Identifier of the Event (UUID)
        eventType:
          type: string
          description: This MDMS master data to diffrenciate the category of event
            which is namespaced.
        eventCategory:
          type: string
          description: This MDMS master data to diffrenciate the category of event
        name:
          maxLength: 65
          type: string
          description: name of event
        description:
          maxLength: 500
          type: string
          description: Description of the event
        status:
          type: string
          description: Status of the event in the system. Can hold one of the following
            enum values.
          enum:
          - Active
          - Inactive
          - Canceled
        source:
          type: string
          description: Status of the event in the system. Can hold one of the following
            enum values.
          enum:
          - WEBAPP
          - MOBILEAPP
        postedBy:
          type: string
        recepient:
          $ref: '#/components/schemas/Recepient'
        actions:
          $ref: '#/components/schemas/Action'
        eventDetails:
          $ref: '#/components/schemas/EventDetails'
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
        recepientEventMap:
          $ref: '#/components/schemas/RecepientEvent'
        generateCounterEvent:
          type: boolean
        internallyUpdted:
          type: boolean
      description: A Object holds the basic data for an Event.
    ActionItem:
      type: object
      required:
      - actionUrl
      - code
      properties:
        actionUrl:
          maxLength: 128
          minLength: 2
          type: string
          description: This is redirection url.
        code:
          maxLength: 32
          minLength: 2
          type: string
          description: Code is to fetch localisation name for each action. This is
            applicable only if there are more then one actions are available for single
            event.
      description: Object that holds basic data for actionable url associated to an
        action.
    EventDetails:
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        organizer:
          type: string
        fromDate:
          maxLength: 32
          minLength: 2
          type: string
          description: Start date of event.
        toDate:
          maxLength: 32
          minLength: 2
          type: string
          description: End date of event.
        latitude:
          type: number
          description: latitude value of the location.
        longitude:
          type: number
          description: longitude value of the location.
        address:
          type: string
        documents:
          type: array
          description: List of file store ids.
          items:
            $ref: '#/components/schemas/Document'
        fees:
          type: number
          description: latitude value of the location.
      description: Object that holds details such as time, venue etc of an event.
    EventRequest:
      type: object
      required:
        - RequestInfo
        - events
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        events:
          type: array
          description: Array of events to be created in the system.
          items:
            $ref: '#/components/schemas/Event'
      description: Contract class to receive request. Array of Event items are used
        in case of create and update
    EventResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        Events:
          type: array
          description: Array of events to be received from the system.
          items:
            $ref: '#/components/schemas/Event'
        totalCount:
          type: integer
          
      description: Contract class to send response. Array of Event items are used
        in case of search results or response for create and update
    NotificationCountResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        totalCount:
          type: integer
        unreadCount:
          type: integer
          
      description: Contract class to send response. Array of Event items are used
        in case of search results or response for create and update
    Document:
      type: object
      properties:
        documentType:
          type: string
        fileName:
          type: string
        fileStoreId:
          type: string
    Recepient:
      type: object
      properties:
        toRoles:
          type: array
          items:
              type: string
        toUsers:
          type: array
          items:
            type: string
    RecepientEvent:
      type: object
      properties:
        recepient: 
          type: string
        eventId:
          type: string
x-api-id: org.egov.user.event
x-common-path: https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml
