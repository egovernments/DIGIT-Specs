openapi: 3.0.1
info:
  title: User Service
  description: User services APIs - to create, update and search users. All individuals
    interacting with the platform - Citizens, Employees, Contractors, Vendors etc.
    are considered as users of the platform
  contact:
    name: eGov
    email: info@egovernments.org
  version: 1.1.0
servers:
- url: /users/
paths:
  /citizen/_create:
    post:
      tags:
      - Users
      summary: Create a new User.
      description: "To create new User(s) in the system. API supports bulk creation\
        \ with max limit as defined in the UserReq. Please note that either whole\
        \ batch succeeds or fails, there's no partial batch success. To create one\
        \ user, please pass array with one user object. \n\nUsers can be created based\
        \ on the roles. Users with types as SYSTEM and EMPLOYEE can create other users\
        \ if their RBAC mapping provides them the permission. Users with CITIZEN type\
        \ can only create themselves, while EMPLOYEE and SYSTEM type users can also\
        \ create other EMPLOYEES and CITIZENS.\n\nUser registration will always be\
        \ a two step process, where this API will create a non authenticated user\
        \ (without password) and after verification (using OTP) other user details\
        \ (including password) can be updated using update user API to complete the\
        \ user registration process.\n"
      requestBody:
        description: Details for the new user + RequestInfo meta data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        201:
          description: User(s) created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRes'
        400:
          description: User(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: users
  /_search:
    post:
      tags:
      - Users
      summary: Search the users in the system based on the criterion specified.
      description: |
        Search and get user(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameters are passed user will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of Users as defined in UserRes model.

        By default results will be sorted by UserName
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserSearchRequest'
        required: false
      responses:
        200:
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRes'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo    
  /v1/_search:
    post:
      tags:
      - Users
      summary: Search the users in the system based on the criterion specified.
      description: |
        Search and get user(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameters are passed user will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of Users as defined in UserRes model.

        By default results will be sorted by UserName
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserSearchRequest'
        required: false
      responses:
        200:
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRes'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo    
  /users/_createnovalidate:
    post:
      tags:
      - Users
      summary: Create user without otp vallidation
      description: "End-point to create the user without otp validation."
      requestBody:
        description: Details for the new user + RequestInfo meta data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        200:
          description: Update user(s) successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRes'
        400:
          description: Update user(s) failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: users  
  /users/_updatenovalidate:
    post:
      tags:
      - Users
      summary: Update user without otp vallidation
      description: "End-point to update the user without otp validation."
      requestBody:
        description: Details for the new user + RequestInfo meta data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        200:
          description: Update user(s) successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRes'
        400:
          description: Update user(s) failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: users      
  /_details:
    post:
      tags:
      - Users
      summary: Update user without otp vallidation
      description: "End-point to update the user without otp validation."
      parameters:
      - name: accessToken
        in: query
        required: true
        schema:
          type: string
          format: varchar
      responses:
        200:
          description: Application(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomUserDetails'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
  /profile/_update:
    post:
      tags:
      - Users
      summary: Update the profile of the user
      description: "End-point to create the user without otp validation."
      requestBody:
        description: Details for the new user + RequestInfo meta data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        200:
          description: Update user(s) successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRes'
        400:
          description: Update user(s) failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: users      
  /password/_update:
    post:
      tags:
      - Update password
      summary: The user can update his password after login
      description: |
        This API used for update the password after login
      requestBody:
        description: Request header for the user with new of values.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LoggedInUserUpdatePasswordRequest'
        required: true
      responses:
        200:
          description: Updated password successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UpdatePasswordResponse'
        400:
          description: Updated password failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: update password
  /password/nologin/_update:
    post:
      tags:
      - Update password
      summary: This API act as reset password or forgot password before login
      description: |
        This API used for reset the password when user forgot his password   by getting otp Reference through registerd mobile number,
      requestBody:
        description: Request header for the user with new of values.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NonLoggedInUserUpdatePasswordRequest'
        required: true
      responses:
        200:
          description: Updated password successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UpdatePasswordResponse'
        400:
          description: Updated password failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: Reset password before login using five digit otp
  /_logout:
    post:
      tags:
      - Logout 
      summary: Logout user
      description: "End-point to create the user without otp validation."
      requestBody:
        description: Details for the new user + RequestInfo meta data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TokenWrapper'
        required: true
      responses:
        200:
          description: logout successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
        400:
          description: Update user(s) failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: logout  
components:
  schemas:
    NonLoggedInUserUpdatePasswordRequest:
      required:
      - newPassword
      - otpReference
      - tenantId
      - userName
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        otpReference:
          type: string
          description: otp reference number which sent to registered mobile
        userName:
          maxLength: 64
          type: string
          description: Registered User name
        newPassword:
          type: string
          description: New password
        tenantId:
          maxLength: 256
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        userType: {
          type: string,
            enum: [
              CITIZEN,
              EMPLOYEE,
              SYSTEM,
              BUSINESS
            ]
          }  
    LoggedInUserUpdatePasswordRequest:
      required:
      - existingPassword
      - newPassword
      - tenantId
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        existingPassword:
          type: string
          description: Existing password
        newPassword:
          type: string
          description: New password
        tenantId:
          maxLength: 256
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        userType: {
          type: string,
            enum: [
              CITIZEN,
              EMPLOYEE,
              SYSTEM,
              BUSINESS
            ]
          }  
    UpdatePasswordResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
    UserSearchRequest:
      type: object
      properties: 
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        id:
          type: array
          items:
            type: integer
            format: int64
        uuid:
          type: array
          items:
            type: string
        username: 
          maxLength: 64
          type: string
        name: 
          maxLength: 100
          type: string
        mobileNumber: 
          type: string
        aadhaarNumber: 
          maxLength: 20
          type: string
        pan: 
          maxLength: 10
          type: string
        emailId: 
          maxLength: 128
          type: string  
        fuzzyLogic:
          type: boolean
        active:
          type: boolean
        tenantId: 
          maxLength: 256
          type: string
        pageSize:
          type: integer
        pageNumber:
          type: integer  
        sort:
          type: array
          items:
            type: string  
        userType: 
          maxLength: 50
          type: string
        roleCodes:
          type: array
          items:
            type: string  
    CreateUserRequest:
      required:
      - RequestInfo
      - Users
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        user:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
    CustomUserDetails:
      type: object
      properties:
        id:
          type: array
          items:
            type: integer
            format: int64
        username: 
          maxLength: 64
          type: string
        name: 
          maxLength: 100
          type: string
        mobileNumber: 
          type: string   
        emailId: 
          maxLength: 128
          type: string  
        locale: 
          maxLength: 128
          type: string  
        type: 
          maxLength: 128
          type: string  
        roles: 
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/Role'
        active:
          type: boolean
        tenantId: 
          maxLength: 256
          type: string
        uuid: 
          maxLength: 256
          type: string
        actions:
          $ref: '#/components/schemas/Action'
    Action:
      type: object
      properties:
        name: 
          maxLength: 256
          type: string
        url: 
          maxLength: 256
          type: string
        displayName: 
          maxLength: 256
          type: string
        orderNumber: 
          type: integer
        queryParams: 
          maxLength: 256
          type: string
        parentModule: 
          maxLength: 256
          type: string
        serviceCode: 
          maxLength: 256
          type: string
    UserRes:
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Users:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
    ResponseInfo:
      required:
      - apiId
      - status
      - ts
      - ver
      type: object
      properties:
        apiId:
          maxLength: 128
          type: string
          description: unique API ID
        ver:
          maxLength: 32
          type: string
          description: API version
        ts:
          type: integer
          description: response time in epoch
          format: int64
        resMsgId:
          maxLength: 256
          type: string
          description: unique response message id (UUID) - will usually be the correlation
            id from the server
        msgId:
          maxLength: 256
          type: string
          description: message id of the request
        status:
          type: string
          description: status of request processing - to be enhanced in futuer to
            include INPROGRESS
          enum:
          - SUCCESSFUL
          - FAILED
      description: ResponseInfo should be used to carry metadata information about
        the response from the server. apiId, ver and msgId in ResponseInfo should
        always correspond to the same values in respective request's RequestInfo.
    TokenWrapper:
      type: object
      properties:
        accessToken:
          type: string
          description: access-token required for authentication
  parameters:
    userName:
      name: userName
      in: query
      description: The unique user name of the User.
      schema:
        maxLength: 64
        minLength: 0
        type: string
    active:
      name: active
      in: query
      description: True will be set in cases where only active users are needed and
        False will be set when inactive users are needed and no value will be set
        when all users are needed.
      allowEmptyValue: true
      schema:
        type: boolean
        format: varchar
        default: true
    id:
      name: id
      in: query
      description: List of Unique Id of User
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    userType:
      name: userType
      in: query
      description: Defines the type of user. Possible values are as per type enum
        defined in User object.
      schema:
        exclusiveMaximum: false
        exclusiveMinimum: true
        maxLength: 64
        minLength: 0
        type: string
    roleCodes:
      name: roleCodes
      in: query
      description: roles assigned to the user(roleCodes).Search response will have
        all users having all roles specified in the request.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    includeDetails:
      name: includeDetails
      in: query
      description: parameter to indicate whether UserDetails should be included as
        a part of User object in the response
      schema:
        type: boolean
        default: false
    pageSize:
      name: pageSize
      in: query
      description: Number of records returned.
      schema:
        multipleOf: 10.0
        maximum: 100
        exclusiveMaximum: false
        minimum: 0
        exclusiveMinimum: true
        type: integer
        default: 20
    pageNumber:
      name: pageNumber
      in: query
      description: Page number
      schema:
        type: integer
        default: 1
    sortUser:
      name: sort
      in: query
      description: User results will be sorted by name ascending by default if this
        parameter is not provided.
      style: pipeDelimited
      schema:
        maxItems: 3
        minItems: 1
        uniqueItems: true
        type: array
        items:
          pattern: '[-+](userName|name|gender)'
          type: string
        default: '["+name"]'
x-common-path: https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml
x-api-id: org.egov.users
