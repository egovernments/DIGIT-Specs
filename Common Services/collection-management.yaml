openapi: 3.0.1
info:
  title: Collection System
  description: Collection Management System serves as revenue collection platform
    for all the billing systems through cash, cheque, dd, swipe machine.
  contact:
    name: eGovernments Foundation
    email: contact@egovernments.org
  version: 1.0.1
servers:
- url: /
paths:
  /bankAccountServiceMapping/_create:
    post:
      description: creates service mapping for bank account
      tags:
      - bank-account-service-mapping-controller
      summary: Creates service mapping for bank account
      operationId: createUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BankAccountServiceMappingReq"
      responses:
        '200':
          description: Created Successfully 
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/BankAccountServiceMappingResponse"
        '201':
          description: Created
        '400':
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /bankAccountServiceMapping/_search:
    post:
      description: Searches the service mapping for bank account
      tags:
      - bank-account-service-mapping-controller
      summary: Searches the service mapping for bank account
      operationId: searchUsingPOST
      parameters:
      - name: bankAccount
        in: query
        description: Bank account details 
        schema: {}
      - name: businessDetails
        in: query
        description: Details of business
        schema: {}
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        schema: {}
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                "$ref": "#/components/schemas/BankAccountServiceMappingResponse"
        201:
          description: Created
          content: {}
        400:
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /payments/_search: 
    post:
      tags:
      - Payment
      summary: Searches the Payment based on search criteria
      description: API to search payments based on search parameters like consumerCode,
        mobileNumber, transactionNumber etc.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: limit
        in: query
        description: Number of records returned.
        schema:
          multipleOf: 10.0
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: true
          type: integer
          default: 20
      - name: offset
        in: query
        description: Page number
        schema:
          type: integer
          default: 1
      - name: sort
        in: query
        description: Receipt results will be sorted by receiptnumber ascending by
          default.
        style: pipeDelimited
        schema:
          maxItems: 3
          minItems: 1
          uniqueItems: true
          type: array
          items:
            pattern: '[-+](receiptNumber|receiptDate)'
            type: string
          default: '["+receiptNumber"]'
      - name: ids
        in: query
        description: Payment Ids.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: consumerCodes
        in: query
        description: Consumer Code .
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: receiptNumbers
        in: query
        description: List of receipt numbers.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: fromDate
        in: query
        description: Transaction date, here search will happen as Transaction date
          is greater or equal to given fromDate.
        schema:
          type: integer
          format: int64
      - name: toDate
        in: query
        description: Transaction date, here search will happen as Transaction date
          is lesser or equal to given toDate.
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        description: Search based on the status of the Payment.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: instrumentStatus
        in: query
        description: Search based on the status of the instrument.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: paymentModes
        in: query
        description: Search based on the Payment type such as cash, cheque, dd etc.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: payerIds
        in: query
        description: The ids of the payer
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: transactionNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one
          transaction.
        schema:
          maxLength: 64
          minLength: 0
          type: string
      - name: mobileNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one
          transaction.
        schema:
          maxLength: 64
          minLength: 0
          type: string
      - name: billIds
        in: query
        description: List of bill ids to search receipts.Business details code is
          mandatory for searching with this criteria.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: businessServices
        in: query
        description: 'Billing system details e.g., PropertyTax,Water Charges etc.'
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Successful response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
  /payments/_plainsearch:
    post:
      tags:
      - Payment
      summary: plainSearch
      operationId: plainSearchUsingPOST
      parameters:
      - name: billIds
        in: query
        description: List of bill ids to search receipts.Business details code is mandatory for searching with this criteria.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: businessServices
        in: query
        description: 'Billing system details e.g., PropertyTax,Water Charges etc.'
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: consumerCodes
        in: query
        required: false
        description: Consumer Code.
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: fromDate
        in: query
        description: Transaction date, here search will happen as Transaction date is greater or equal to given fromDate.
        required: false
        style: form
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        required: false
        description: Payment Ids.
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: instrumentStatus
        in: query
        description: Search based on the status of the instrument.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: isCountRequest
        in: query
        required: false
        style: form
        schema:
          type: boolean
      - name: limit
        in: query
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: mobileNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one transaction.
        required: false
        style: form
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: payerIds
        in: query
        description: The ids of the payer
        required: false
        style: pipeDelimited
        schema:
          type: array
          items:
            type: string
      - name: paymentModes
        in: query
        description: The mode of the payment
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: receiptNumbers
        in: query
        description: List of receipt numbers.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: status
        in: query
        description: Search based on the status of the Payment.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: tenantId
        in: query
        description: "Unique id for a tenant."
        required: false
        style: form
        schema:
          type: string
      - name: tenantIds
        in: query
        description: "List of unique ids for a tenant."
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: toDate
        in: query
        description: Transaction date, here search will happen as Transaction date is lesser or equal to given toDate.
        required: false
        style: form
        schema:
          type: integer
          format: int64
      - name: transactionNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one transaction.
        required: false
        style: form
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestInfoWrapper"
      responses:
        '200':
          description: Successful response
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PaymentResponse"
        '201':
          description: Created
        '400':
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found    
  /payments/_create:
    post:
      tags:
      - Payment
      summary: Records the payment in the system
      description: This API generates a transaction number and persists the payment
        details. The payment information is then pushed to queue for further processing.
      requestBody:
        description: Creates payment for list of bill
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        201:
          description: Payment created sucessfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
      x-codegen-request-body-name: PaymentRequest
  /payments/_validate:
    post:
      tags:
      - Payment
      summary: Validates the PaymentRequest
      description: |
        The API runs the following set of validations on the payment request.
        1. Bill is present and is in valid state
        2. Amount paid is positive integer
        3. Zero amount payment is allowed only if bill amount is zero
        4. Payment mode is allowed
        5. Partial Payment is allowed based on the businessService
        6. Advance payment is allowed based on the businessService
      requestBody:
        description: The request to be validated
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        201:
          description: Payment info validated sucessfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
      x-codegen-request-body-name: PaymentRequest
  /payments/{moduleName}/_search:
    post:
      description: Searches the payment for a particular module based on search criteria
      tags:
      - Payment
      summary: Searches the payment for a particular module based on search criteria
      operationId: searchUsingPOST_2
      parameters:
      - name: billIds
        in: query
        description: Id for a particular bill
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: businessServices
        in: query
        description: 'Billing system details e.g., PropertyTax,Water Charges etc.'
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: consumerCodes
        in: query
        description: Consumer Code 
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: fromDate
        in: query
        description: Transaction date, here search will happen as Transaction date is greater or equal to given fromDate
        required: false
        style: form
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: "List of system generated ids of applications."
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: instrumentStatus
        in: query
        description: Search based on the status of the instrument.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: isCountRequest
        in: query
        required: false
        style: form
        schema:
          type: boolean
      - name: limit
        in: query
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: mobileNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one transaction.
        required: false
        style: form
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: payerIds
        in: query
        description: The ids of the payer
        required: false
        style: pipeDelimited
        schema:
          type: array
          items:
            type: string
      - name: paymentModes
        in: query
        description: The mode of the payment
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: receiptNumbers
        in: query
        description: List of receipt numbers.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: status
        in: query
        description: Search based on the status of the Payment.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: false
        style: form
        schema:
          type: string
      - name: tenantIds
        in: query
        description: List of unique ids for a tenant.
        required: false
        style: pipeDelimited
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: toDate
        in: query
        description: Transaction date, here search will happen as Transaction date is lesser or equal to given toDate.
        required: false
        style: form
        schema:
          type: integer
          format: int64
      - name: transactionNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one transaction.
        required: false
        style: form
        schema:
          type: string
      - name: moduleName
        in: path
        description: moduleName
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestInfoWrapper"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PaymentResponse"
        '400':
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  /payments/{moduleName}/_workflow:
    post:
      description: Payment workflow on a particular module
      tags:
      - Payment
      summary: Payment workflow on a particular module
      operationId: workflowUsingPOST
      parameters:
      - name: moduleName
        in: path
        description: moduleName
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PaymentWorkflowRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
        '400':
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'  
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /preexistpayments/_update:
    post:
      tags:
      - pre-exist-payment-controller
      summary: Update pre-exist payments
      description: Updates pre existing payments in system
      operationId: updateUsingPOST
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  /remittances/_create:
    post:
      description: Creates the payment remittance
      tags:
      - remittance-controller
      summary: Creates the payment remittance
      operationId: createUsingPOST_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RemittanceRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RemittanceResponse"
        '400':
          description: Invalid Input
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /remittances/_search:
    post:
      description: Searches the payment remmitance based on a search criteria
      tags:
      - remittance-controller
      summary: Searches the payment remmitance based on a search criteria
      operationId: searchUsingPOST_3
      parameters:
      - name: bankaccount
        in: query
        description: Bank account details
        required: false
        style: form
        schema:
          type: string
      - name: fromDate
        in: query
        description: Transaction date, here search will happen as Transaction date is greater or equal to given fromDate
        required: false
        style: form
        schema:
          type: integer
          format: int64
      - name: function
        in: query
        description: function
        required: false
        style: form
        schema:
          type: string
      - name: fund
        in: query
        description: fund
        required: false
        style: form
        schema:
          type: string
      - name: ids
        in: query
        description: "List of system generated ids of applications."
        required: false
        style: pipeDelimited
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of page
        required: false
        style: form
        schema:
          type: integer
          format: int32
      - name: reasonForDelay
        in: query
        description: Reason behind delay 
        required: false
        style: form
        schema:
          type: string
      - name: referenceNumbers
        in: query
        description: Reference number
        required: false
        style: pipeDelimited
        schema:
          type: array
          items:
            type: string
      - name: remarks
        in: query
        description: remarks if any
        required: false
        style: form
        schema:
          type: string
      - name: sortBy
        in: query
        description: Sorting parameter
        required: false
        style: form
        schema:
          type: string
      - name: sortOrder
        in: query
        description: Order of sorting
        required: false
        style: form
        schema:
          type: string
      - name: status
        in: query
        description: status of application
        required: false
        style: form
        schema:
          type: string
      - name: tenantId
        in: query
        description: "Unique id for a tenant."
        required: true
        style: form
        schema:
          type: string
      - name: toDate
        in: query
        description: Transaction date, here search will happen as Transaction date is lesser or equal to given toDate.
        required: false
        style: form
        schema:
          type: integer
          format: int64
      - name: voucherHeader
        in: query
        required: false
        style: form
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestInfoWrapper"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RemittanceResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /remittances/_update:
    post:
      description: Updates the payment remittance
      tags:
      - remittance-controller
      summary: Updates the payment remittance
      operationId: updateUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RemittanceRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RemittanceResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  
components:
  schemas:
    BankAccountServiceMappingReq:
      title: BankAccountServiceMappingReq
      required:
      - BankAccountServiceMapping
      - RequestInfo
      type: object
      properties:
        BankAccountServiceMapping:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountServiceMapping'
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
    BankAccountServiceMappingResponse:
      title: BankAccountServiceMappingResponse
      type: object
      properties:
        BankAccountServiceMapping:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountServiceMapping'
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
    
    BankAccountServiceMapping:
      title: BankAccountServiceMapping
      required:
      - bankAccount
      - businessDetails
      - tenantId
      type: object
      properties:
        bank:
          description: Name of bank
          type: string
        bankAccount:
          minLength: 8
          maxLength: 18
          description: Details of bank account
          type: string
        bankBranch:
          description: Branch name of bank 
          type: string
        businessDetails:
          type: string
        tenantId:
          description: "Unique id for a tenant."
          type: string      
    Bill:
      type: object
      properties:
        paidBy:
          type: string
          description: Name of the Person who is making payment.
        mobileNumber:
          type: string
          description: The mobileNumber of person who is paying
          format: varchar
        id:
          type: string
          description: Name of the Person who is making payment.
          readOnly: true
        tenantId: 
          type: string
          description: Unique id of a tenant
          readOnly: true
        payerName:
          type: string
          description: The owner of the bill
          format: varchar
        payerAddress:
          type: string
          description: The address of the owner of the bill
          format: varchar
        payerEmail:
          type: string
          description: The email id of the owner of the bill
          format: varchar
        payerId:
          type: string
          description: The system user id of the owner of the bill
          format: varchar
        status:
          type: string
          description: status of the bill.
          enum:
          - ACTIVE
          - CANCELLED
          - PAID
          - EXPIRED
        reasonForCancellation:
          type: string
          description: The reason for cancellation of bill
          format: varchar
        isCancelled:
          type: boolean
          description: Boolean indicating if the bill is cancelled
          format: varchar
        additionalDetails:
          type: object
          properties: {}
          description: Additional fields can be captured here
        collectionModesNotAllowed:
          type: array
          description: The list of collection modes that are not allowed
          items:
            type: string
        partPaymentAllowed:
          type: boolean
          description: Boolean flag indicating if partial payment is allowed to be
            collected
        isAdvanceAllowed:
          type: boolean
          description: Flag indicating if advance can be collected
        minimumAmountToBePaid:
          type: number
          description: The minumun amount that can be paid against the bill
          format: double
        businessService:
          type: string
          description: The businessService of the entity for which the bill is generated
          format: varchar
        totalAmount:
          type: number
          description: The total amount to be paid for the bill
          format: double
        consumerCode:
          type: string
          description: The consumer code for which bill is generated
          format: varchar
        billNumber:
          type: string
          description: The bill number generated by system
          format: varchar
        billDate:
          type: number
          description: The date on which bill is generated
          format: int64
        amountPaid:
          type: number
          description: The total amount to be paid for the bill
          format: double
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
        billDetails:
          type: array
          items:
            $ref: '#/components/schemas/BillDetail'
    BillDetail:
      type: object
      properties:
        id:
          type: string
          description: uuid of the billDetail.
        tenantId:
          type: string
          description: tenantId of the billDetail.
        demandId:
          type: string
          description: The id of the corresponding demand .
        billId:
          type: string
          description: The id of the parent bill.
        amount:
          type: number
          description: Amount to be paid for the bill detail.
          format: double
        amountPaid:
          type: number
          description: Amount paid by the citizen.
          format: double
        fromPeriod:
          type: number
          description: start date of the taxperiod
          format: int64
        toPeriod:
          type: number
          description: end date of the taxperiod
          format: int64
        receiptDate:
          type: string
          description: Receipt Date.
          format: date
        receiptType:
          type: object
          description: Type of Receipt.
        channel:
          type: string
          description: To be used by third party applications, to send the channel
            name.
        voucherHeader:
          type: object
          description: Voucher header  need to refer from Finanicals.
        boundary:
          type: object
          description: Boundary need to refer from Core services.
        manualReceiptNumber:
          type: string
          description: Manual Receipt Number for legacy reciepts.
        manualReceiptDate:
          type: number
          description: Manual Receipt date for legacy reciepts.
        collectionType:
          type: string
          description: collectionType of the payment.
        billDescription:
          type: string
          description: Description of the bill.
        expiryDate:
          type: number
          description: Expiry date in epoch
          format: int64
        displayMessage:
          type: string
        cancellationRemarks:
          type: string
          description: Remarks related to cancellation of payment
        additionalDetails:
          type: object
          properties: {}
          description: Additional fields can be captured in this object as map
        billAccountDetails:
          type: array
          items:
            $ref: '#/components/schemas/BillAccountDetail'
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
        callBackForApportioning:
          type: boolean
    BillAccountDetail:
      type: object
      properties:
        id:
          type: string
          description: uuid of the billAccountDetail.
        tenantId:
          type: string
          description: tenantId of the billAccountDetail.
        billDetailId:
          type: string
          description: uuid of the parent billDetail.
        demandDetailId:
          type: string
          description: uuid of the demand for which the parent billDetail is created.
        order:
          type: integer
          description: Priority of the account detail.
        amount:
          type: number
          description: Amount to be paid for the bill account detail
          format: double
        adjustedAmount:
          type: number
          description: The amount paid against the bill account detail
          format: double
        taxHeadCode:
          type: string
          description: The taxHeadCode of the bill account detail
        additionalDetails:
          type: object
          properties: {}
          description: Additional fields can be captured in this object as map
        isActualDemand:
          type: boolean
        purpose:
          type: string
          description: purpose of the bill account detail.
          enum:
          - ARREAR
          - CURRENT
          - ADVANCE
          - EXEMPTION
          - ARREAR_LATEPAYMENT_CHARGES
          - CURRENT_LATEPAYMENT_CHARGES
          - CHEQUE_BOUNCE_PENALTY
          - REBATE
          - OTHERS
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    PaymentRequest:
      type: object
      required:
      - requestInfo
      - Payment
      properties:
        requestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        Payment:
          $ref: '#/components/schemas/Payment'
      description: Payment Request with Request Info.
    PaymentResponse:
      type: object
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
      description: Receipt Request with Request Info.
    PaymentWorkflowRequest:
      type: object
      properties:
        requestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        Payment:
          $ref: '#/components/schemas/PaymentWorkflow'
      description: Payment Workflow Request with Request Info.
    Payment:
      required:
      - mobileNumber
      - paidBy
      - paymentDetails
      - paymentMode
      - tenantId
      - totalAmountPaid
      type: object
      properties:
        tenantId:
          maxLength: 64
          type: string
          description: Unique id of tenant.
          format: varchar
        id:
          maxLength: 64
          type: string
          description: Unique id of tenant.
          format: varchar
        totalDue:
          type: number
          description: Total amount due.
        totalAmountPaid:
          type: number
          description: Unique id of tenant.
          format: double
        transactionNumber:
          maxLength: 128
          type: string
          description: Transaction number of the payment
          format: varchar
        transactionDate:
          type: number
          description: The date of payment in epoch
          format: int64
        paymentMode:
          type: string
          description: Mode of payment used.
          format: varchar
          enum:
          - CASH
          - CHEQUE
          - DD
          - ONLINE
          - CARD
        instrumentDate:
          type: number
          description: The instrument date
          format: int64
        instrumentNumber:
          maxLength: 128
          type: string
          description: The number of the instrument like dd number,cheque number etc.
          format: varchar
        instrumentStatus:
          type: string
          description: The status of the instrument
          format: varchar
          enum:
          - APPROVED
          - APPROVALPENDING
          - TOBESUBMITTED
          - REMITTED
          - REJECTED
          - CANCELLED
          - DISHONOURED
        ifscCode:
          maxLength: 64
          type: string
          description: IFSC code of the bank to which payment is made
          format: varchar
        additionalDetails:
          type: object
          properties: {}
          description: Any additional fields can be captured here as a map
        paymentDetails:
          type: array
          description: Payment details of each bill
          items:
            $ref: '#/components/schemas/PaymentDetail'
        paidBy:
          maxLength: 128
          type: string
          description: The person who is paying the bill
          format: varchar
        mobileNumber:
          maxLength: 64
          type: string
          description: The mobileNumber of person who is paying
          format: varchar
        payerName:
          maxLength: 128
          type: string
          description: The owner of the bill
          format: varchar
        payerAddress:
          maxLength: 1024
          type: string
          description: The address of the owner of the bill
          format: varchar
        payerEmail:
          maxLength: 64
          type: string
          description: The email id of the owner of the bill
          format: varchar
        payerId:
          maxLength: 64
          type: string
          description: The system user id of the owner of the bill
          format: varchar
        paymentStatus:
          type: string
          description: Unique id of tenant.
          enum:
          - NEW
          - DEPOSITED
          - CANCELLED
          - DISHONOURED
          - RECONCILED
        fileStoreId:
          type: string
          description: Unique id criteria for filestore
          format: varchar
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    PaymentDetail:
      required:
      - billId
      - totalAmountPaid
      type: object
      properties:
        id:
          maxLength: 64
          type: string
          description: id of the payment detail
        tenantId:
          maxLength: 64
          type: string
          description: tenantId of the payment detail
        totalDue:
          type: number
          description: The total amount to be paid for the bill corresponding to the
            payment detail
          format: double
        paymentId:
          maxLength: 64
          type: string
          description: payment Id of the payment detail
        totalAmountPaid:
          type: number
          description: The amount that is being paid
          format: double
        manualReceiptNumber:
          maxLength: 64
          type: string
          description: Receipt number entered manually for legacy data.
        manualReceiptDate:
          type: integer
          description: The epoch receipt date generated for the payment against the
            bill
        receiptNumber:
          maxLength: 64
          type: string
          description: The receipt number generated for the payment against the bill
        receiptType:
          type: string
          description: The receipt type generated for the payment against the bill
        receiptDate:
          type: integer
          description: The epoch receipt date generated for the payment against the
            bill
        businessService:
          type: string
          description: The code of the businessService to which the bill belongs
        billId:
          maxLength: 64
          type: string
          description: The id of the bill for which the payment is made
        bill:
          $ref: '#/components/schemas/Bill'
        additionalDetails:
          type: integer
          description: Any additional fields can be captured here as a map
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: The payment details of each bill
    PaymentWorkflow:
      required:
      - action
      - paymentId
      - tenantId
      type: object
      properties:
        paymentId:
          minLength: 1
          type: string
          description: id of the payment on which to take action .
        action:
          type: string
          description: the action to be taken on the payment
          enum:
          - CANCEL
          - DISHONOUR
          - REMIT
        tenantId:
          minLength: 1
          type: string
          description: tenantId of the payment
        reason:
          type: string
          description: reason for taking the action.
        additionalDetails:
          type: integer
          description: Any additional fields can be captured here as a map
      description: Workflow object for payment
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          "$ref": "https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo"    
    Remittance:
      title: Remittance
      required:
      - referenceDate
      - referenceNumber
      - tenantId
      type: object
      properties:
        auditDetails:
          "$ref": "https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails"
        bankaccount:
          type: string
          description: bank account details
        function:
          type: string
        fund:
          type: string
        id:
          type: string
        reasonForDelay:
          type: string
        referenceDate:
          type: integer
          format: int64
        referenceNumber:
          type: string
        remarks:
          type: string
        remittanceDetails:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/RemittanceDetail"
        remittanceInstruments:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/RemittanceInstrument"
        remittanceReceipts:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/RemittanceReceipt"
        status:
          type: string
        tenantId:
          type: string
        voucherHeader:
          type: string      
    RemittanceDetail:
      title: RemittanceDetail
      required:
      - chartOfAccount
      type: object
      properties:
        chartOfAccount:
          type: string
          description: Account chart
        creditAmount:
          type: number
          description: Credit amount
          format: bigdecimal
        debitAmount:
          type: number
          description: Debit amount
          format: bigdecimal
        id:
          description: Unique system generated id
          type: string
        remittance:
          type: string
        tenantId:
          description: "Unique id for a tenant."
          type: string
    RemittanceInstrument:
      title: RemittanceInstrument
      required:
      - instrument
      type: object
      properties:
        id: 
          description: "List of system generated ids of applications."
          type: string
        instrument:
          type: string
        reconciled:
          type: boolean
        remittance:
          type: string
        tenantId:
          description: Unique id of tenant
          type: string
    RemittanceReceipt:
      title: RemittanceReceipt
      type: object
      properties:
        id:
          type: string
          description: Unique system generated id
        receipt:
          type: string
          description:  Receipt ID generated for this payment
        remittance:
          type: string
        tenantId:
          type: string          
    RemittanceRequest:
      title: RemittanceRequest
      required:
      - Remittance
      - RequestInfo
      type: object
      properties:
        Remittance:
          type: array
          items:
            "$ref": "#/components/schemas/Remittance"
        RequestInfo:
          "$ref": "https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo"
    RemittanceResponse:
      title: RemittanceResponse
      type: object
      properties:
        Remittance:
          type: array
          items:
            "$ref": "#/components/schemas/Remittance"
        ResponseInfo:
          "$ref": "https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo"          
  parameters:
    pageSize:
      name: pageSize
      in: query
      description: Number of records returned.
      schema:
        multipleOf: 10.0
        maximum: 100
        exclusiveMaximum: false
        minimum: 0
        exclusiveMinimum: true
        type: integer
        default: 20
    pageNumber:
      name: pageNumber
      in: query
      description: Page number
      schema:
        type: integer
        default: 1
    sortReceipt:
      name: sort
      in: query
      description: Receipt results will be sorted by receiptnumber ascending by default.
      style: pipeDelimited
      schema:
        maxItems: 3
        minItems: 1
        uniqueItems: true
        type: array
        items:
          pattern: '[-+](receiptNumber|receiptDate)'
          type: string
        default: '["+receiptNumber"]'
x-common-path: https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml
