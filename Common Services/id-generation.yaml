openapi: 3.0.1
info:
  title: ID Generation service
  description: This service generates a unique ID/Code given the needed format e.g.\
    \ an id wit format AP-PT-2017/04/11-000001-23 where format is can be decomposed\
    \ as (- is used as a separator in the above example) -\n  \n  AP - Fixed string\
    \ indicating the tenant\n  \n  PT - fixed string indicating module\n  \n  2017/04/11\
    \ - Date field indicating YYYY/MM/DD\n  \n  000001 - local sequence number\n \
    \ \n  23 - two random digits\n\n  This can be indicated to IDGen service as an\
    \ ID needed in the format (square brackets indicate the parts that will be replaced\
    \ by the svc to generate the new id) -\n  AP-PT-[YYYY/MM/DD]-[SEQ_ACK_NUM]-[d{2}]\n\
    \  \n  Please note that are replaceable elements will be enclosed within []. Following\
    \ construct are supported - \n      \n      1. Date patterns as per java SimpleDateFormat\
    \ (https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html)\n \
    \     2. Regex patterns as per Java regex paterns (http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html)\n\
    \      3. SEQ_ where X is the name of a sequence to be used, e.g. SEQ_ACK_NUM\n\
    \      4. Static elements will be without enclosing square brackets\n  \n
  contact:
    name: Pranav
  version: 1.0.0
servers:
- url: https://dev.digit.org/egov-idgen/
paths:
  /id/_generate:
    post:
      tags:
      - IdGeneration Controller
      summary: Create new id.
      description: API to generate new id based on the id formats passed.
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IdGenerationRequest'
        required: true
      responses:
        201:
          description: Id generated sucessfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdGenerationResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: idRequests
components:
  schemas:
    IdRequest:
      required:
      - idName
      - tenantId
      type: object
      properties:
        idName:
          type: string
          description: |
            It would indicate the type of id, we would like to generate, ex upic no or acknowledgement number. Please nite that the id format can also be configured with idGen service with theis name in case calling services wishes to do so, so as to not needing to pass the format each time. In such a case if the format is passed at the runtime then the passed format will take precedence over configured format. idName should be namespaced with module/functionality e.g. propertytax.acknumber or propertytax.assessmentnumber
        tenantId:
          type: string
          description: |
            tenantid for which Id has to be generated. Please note that an id configuration can be overwritten for a particular tenant using tenantid prefix,  e.g. mycity.propertytax.acknumber configuration will be evaluated for mycity if both propertytax.acknumber and mycity.propertytax.acknumber are configured
        format:
          type: string
          description: format of the id to be generated. Supported as per the description
            of the service.
        count:
          type: integer
          description: count for ids
    IdResponse:
      type: object
      properties:
        id:
          type: string
          description: This is the generated id
    IdGenerationRequest:
      type: object
      properties:
        requestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        idRequests:
          type: array
          items:
            $ref: '#/components/schemas/IdRequest'
      description: Contract class to receive request.
    IdGenerationResponse:
      type: object
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        idResponses:
          type: array
          items:
            $ref: '#/components/schemas/IdResponse'
      description: Contract class to send response.
