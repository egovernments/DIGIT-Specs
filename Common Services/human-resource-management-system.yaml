openapi: 3.0.1
info:
  title: Employee Information System APIs - Employee
  description: All APIs available from Employee Information System  for employee services
    are listed here. 1. To create statewide standardized database of the employee
    in order to streamline processes related to personnel management. 2. To increase
    transparency for higher management for efficient resource planning 3. Integration
    with rainmaker modules for  security, authentication and workflow handling  4.
    Setting KPIs for employees and timely report generation
  contact:
    name: Vishal Mahuli
  version: 1.0.0
servers:
- url: /egov-hrms/[API endpoint]
paths:
  /employees/_search:
    post:
      tags:
      - Employee
      summary: Get the list of employees defined in the system.
      description: |
        Get the employee list based on the input parameters. Response will give the minimum set of information related to the employee.
      parameters:
      - name: codes
        in: query
        description: List of employee codes
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: List of employee names
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: departments
        in: query
        description: List of Department codes for the employee assignment.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: designations
        in: query
        description: List of Designation codes for the employee assignment.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: asOnDate
        in: query
        description: Epoch Date of assignment
        schema:
          type: number
      - name: ids
        in: query
        description: List of Unique Id of employee
        style: form
        explode: false
        schema:
          maxItems: 100
          type: array
          items:
            type: integer
      - name: employeestatuses
        in: query
        description: List of Unique codes of employee status
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: employeetypes
        in: query
        description: List of Unique codes of employee type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: uuids
        in: query
        description: List of Unique uuid of employee
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: positions
        in: query
        description: List of Unique Positions
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: roles
        in: query
        description: List of Roles of employee
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: phone
        in: query
        description: Phone Number
        required: true
        schema:
          type: string
      - name: isActive
        in: query
        description: True will return active employees, False otherwise
        required: true
        schema:
          type: boolean
      - name: offset
        in: query
        description: Offset of the search result
        required: true
        schema:
          type: integer
      - name: limit
        in: query
        description: No of records to be returned from the offset
        required: true
        schema:
          type: integer
      - name: tenantid
        in: query
        description: Tenant id
        required: true
        schema:
          type: string
          maxLength: 250
      requestBody:
        description: Common request info for getting employee.
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: true
      responses:
        200:
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeRes'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
  /employees/_create: 
    post:
      tags:
      - Employee
      summary: Create a new employee in the system along with all the related informations
        like - assignment, jurisdiction, service, education and probation
      description: To create a new employee we can use POST and set all the required
        and non-mandatory parameters. When an employee is created, an user is also
        created along with it. Type value in object will be "EMPLOYEE".
      requestBody:
        description: Details for the new employee.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EmployeeReq'
        required: true
      responses:
        202:
          description: Employee request accepted for creation.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeRes'
        400:
          description: Invalid Input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: employees
  /employees/_update:
    post:
      tags:
      - Employee
      summary: Update Employee data for a particular employee
      description: To update an existing employee's employee details and all other
        details like assignment, jurisdiction, qualification service details and porbation.
        This API will also be used for deactivating an employee
      requestBody:
        description: Request header for the employee with new of values.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EmployeeReq'
        required: true
      responses:
        202:
          description: Employee request accepted for update.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeRes'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: employees
  /employees/_count:
    post:
      tags:
      - Employee
      summary: Get the list of count of active and inactive employee.
      description: |
        Get the list of count of active and inactive employee for given tenant Id.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema: {}
      requestBody:
        description: Request body for count api
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
      responses:
        200:
          description: Successful response, present the list of count of active and
            inactive employee for given tenant Id.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeCountResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
components:
  schemas:
    Employee:
      required:
      - assignments
      - employeeType
      - jurisdictions
      - tenantId
      - user
      type: object
      properties:
        user:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
        id:
          type: integer
          description: Numeric id of the employee, this is same as user id.
        uuid:
          maxLength: 1024
          type: string
          description: UUID of the employee, this is same as user uuid.
        code:
          maxLength: 256
          minLength: 1
          type: string
          description: The unique code for an employee. This will autogenerated if
            there's no input otherwise user will have to input a unique code.
        employeeStatus:
          maxLength: 250
          type: string
          description: Status of the employee from the status master where object
            type is "Employee Master". Default value will be "EMPLOYED".  Possible
            status list for employee are - EMPLOYED,RETIRED,SUSPENDED and DECEASED
        employeeType:
          maxLength: 250
          type: string
          description: Type of employment of the employee from the EmployeeType.
        dateOfAppointment:
          type: number
          description: Epoch Date of appointment of the employee.
          format: int128
        jurisdictions:
          maxItems: 50
          minItems: 1
          uniqueItems: true
          type: array
          description: List of Jurisdictions for which this employee has access to.
            Currently we dont validate this
          items:
            $ref: '#/components/schemas/Jurisdiction'
        assignments:
          minLength: 1
          type: array
          description: List of assignments for the employee.
          items:
            $ref: '#/components/schemas/Assignment'
        serviceHistory:
          maxItems: 25
          uniqueItems: true
          type: array
          description: List of service history for the employee.
          items:
            $ref: '#/components/schemas/ServiceHistory'
        isActive:
          type: boolean
          description: Field to mark whether the employee is active
        education:
          maxItems: 25
          uniqueItems: true
          type: array
          description: List of educational qualification for the employee.
          items:
            $ref: '#/components/schemas/EducationalQualification'
        tests:
          maxItems: 25
          uniqueItems: true
          type: array
          description: List of departmental tests qualified by the employee.
          items:
            $ref: '#/components/schemas/DepartmentalTest'
        tenantId:
          maxLength: 250
          type: string
          description: Unique Identifier of which tenant this data is defined
        deactivationDetails:
          maxItems: 25
          uniqueItems: true
          type: array
          description: List of deactivation details for the employee.
          items:
            $ref: '#/components/schemas/DeactivationDetails'
        reactivationDetails:
          maxItems: 25
          uniqueItems: true
          type: array
          description: List of reactivation details for the employee.
          items:
            $ref: '#/components/schemas/ReactivationDetails'
        documents:
          maxItems: 50
          uniqueItems: true
          type: array
          description: List of all the documents associated with an employee.
          items:
            $ref: '#/components/schemas/EmployeeDocuments'
        reActivateEmployee:
          type: boolean
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: An employee is by default User of the system. User will be created
        from employee.
    Assignment:
      required:
      - department
      - designation
      - fromDate
      - toDate
      - isCurrentAssignment
      type: object
      properties:
        id:
          type: string
          description: UUID of the assignment.
        position:
          type: integer
          description: Position Id associated with the assignment - autogenerated.
          format: int64
        designation:
          type: string
          description: Designation code associated with the assignment.
        department:
          type: string
          description: Unique code of the Department associated with the assignment.
        fromDate:
          type: integer
          description: Epoch value of From Date of assignment period.
          format: int128
        toDate:
          type: integer
          description: Epoch value of Till Date of assignment period.
          format: int128
        govtOrderNumber:
          type: string
          description: The order number issued for any transfer, promotion, demotion
            or delegation of power.
        tenantId:
          type: string
          description: Unique id for a tenant
        reportingTo:
          type: string
          description: Name of the employee who this employee reports to.
        isHOD:
          type: boolean
          description: Value true means, this guy is the HOD under this assignment.
        isCurrentAssignment:
          type: boolean
          description: Value true means, This is the guy's current assignment.
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    ServiceHistory:
      required:
      - orderNo
      - serviceFrom
      - serviceStatus
      - serviceTo
      type: object
      properties:
        id:
          type: string
          description: UUID of the service details.
        serviceStatus:
          type: string
          description: Detail of the service that the employee has done.
        serviceFrom:
          type: integer
          description: Epoch date on which this service was applicable from.
          format: int128
        serviceTo:
          type: integer
          description: Epoch date on which this service was applicable from.
          format: int128
        location:
          type: string
          description: The government order number passed for the service change.
        tenantId:
          type: string
          description: Unique id for a tenant
        orderNo:
          type: string
          description: The government order number passed for the service change.
        isCurrentPosition:
          type: boolean
          description: Value signifies if this is the current working status.
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    EducationalQualification:
      required:
      - qualification
      - stream
      - yearOfPassing
      type: object
      properties:
        id:
          type: string
          description: UUID of the qualification details.
        qualification:
          type: string
          description: Name of the qualifying degree.
        stream:
          type: string
          description: The main subject studies as part of the qualifying degree.
        yearOfPassing:
          type: integer
          description: The year in which the employee has finished the qualification.
          format: int32
        university:
          type: string
          description: Name of the university/board from which the mentioned qualification
            was acquired.
        tenantId:
          type: string
          description: Unique id for a tenant
        isActive:
          type: boolean
        remarks:
          type: string
          description: Any remarks to be captured for this technical qualification.
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    DepartmentalTest:
      required:
      - test
      - yearOfPassing
      type: object
      properties:
        id:
          type: string
          description: UUID of the departmental test details.
        test:
          type: string
          description: Name of the Test taken.
        yearOfPassing:
          type: integer
          description: The year in which the employee has qualified this test.
          format: int32
        remarks:
          type: string
          description: Any general remarks.
        tenantId:
          type: string
          description: Unique id for a tenant
        isActive:
          type: boolean  
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    EmployeeReq:
      required:
      - Employee
      - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        Employee:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    EmployeeRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        Employee:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    EmployeeDocuments:
      required:
      - employeeId
      type: object
      properties:
        id:
          type: integer
          description: The unique id of this object.
          format: int64
        documentId:
          type: string
          description: The unique url for the document attached.
        documentName:
          type: string
          description: Name of the document attached.
        referenceType:
          type: string
          description: Each details in Employee can have multiple documents attached.
            Based on the reference type we are differentiate which document is relevant
            from which details.
        tenantId:
          type: string
          description: "Unique id for a tenant."
        referenceId:
          type: string
          description: The unique id of the referenced objecy. (Assignment id, Service
            id etc).
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    Jurisdiction:
      required:
      - boundary
      - boundaryType
      - hierarchy
      type: object
      properties:
        id:
          type: string
          description: UUID of the jurisdiction - autogenerated
          format: uuid
        hierarchy:
          type: string
          description: Hierarchy code from the boundary data
        boundary:
          type: string
          description: Boundary code from the boundary data
        boundaryType:
          type: string
          description: Boundary Type code from the boundary data
        tenantId:
          type: string
        isActive:
          type: boolean
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    DeactivationDetails:
      type: object
      properties:
        id:
          type: string
          description: UUID of the deactivation detail
        reasonForDeactivation:
          type: string
          description: Reason for deactivation
        effectiveFrom:
          type: integer
          description: Epoch date from which the deactivation is effective.
          format: int128
        remarks:
          type: string
          description: remarks
        tenantId:
          type: string
          description: Unique id for a tenant
        orderNo:
          type: string
          description: The government order number passed for the deactivation
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    ReactivationDetails:
      type: object
      required:
        - reasonForReactivation
      properties:
        id:
          type: string
          description: UUID of the deactivation detail
        reasonForReactivation:
          type: string
          description: Reason for deactivation
        effectiveFrom:
          type: integer
          description: Epoch date from which the reactivation is effective.
          format: int128
        orderNo:
          type: string
          description: The government order number passed for the reactivation
        remarks:
          type: string
          description: remarks
        tenantId:
          type: string
          description: Unique id for a tenant
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    EmployeeCount:
      type: object
      properties:
        activeEmployee:
          type: string
          description: Number of active employee present in the system
        inactiveEmployee:
          type: string
          description: Number of inactive employee present in the system
        totalEmployee:
          type: string
          description: Total number of employee present in the system
      description: Capture the employee count details
    EmployeeCountResponse:
      type: object
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        EmployeeCount:
          $ref: '#/components/schemas/EmployeeCount'
      description: Response to the service request
